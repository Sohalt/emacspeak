@c $Id$
@node Emacs Packages
@chapter Emacs Packages.


Emacs -- The extensible, self-documenting editor, derives its
functionality from its powerful extension mechnaism. This extension
mechanism is used to implement many user-level applications such as mail
readers, WWW browsers, software development environments and so on.
This chapter gives directions on how to locate the right Emacs package
for addressing specific tasks.  The chapter is organized into logical
sections that each pertain to a specific class of tasks; in dividual
subsections within a section give a brief overview of particular Emacs
packages that have been speech-enabled.


@menu
* Document Authoring:: Document Authoring
* Structured Editing:: Structured Editing
* Browsing Structure :: Browsing Structure 
* Messaging :: Messaging 
* Editting Program Source:: Editting Program Source
* Development Environment:: Development Environment
* Desktop Management:: Desktop Management
* Personal Information Management:: Personal Information Management
* Desktop Applications:: Desktop Applications
@end  menu
@include documents.texi
@include structure.texi
@node Browsing Structure 
@section Browsing Structured Information

This section describes packages that allow you to browse structured
information  --these are distinct from the 
tools described in @ref{Structured Editing},
 in that they are typically
used for working with  content that is read-only e.g., online
documentation.

@c  emacspeak-w3.el
@c  emacspeak-info.el
@c  emacspeak-man.el
@c  emacspeak-table-ui.el
@c  emacspeak-table.el
@c  emacspeak-tabulate.el
@c  emacspeak-view.el

@node Messaging 
@section Electronic Messaging Applications


Working with messaging applications involves both authoring and browsing
content.
Emacspeak provides a rich set of speech-enabled messaging tools.
Further, all of the tools described in the previous sections 
integrate smoothly with the messaging applications described here; this
means that you do not need to re-learn a new set of 
work habits when dealing with content in your messaging application.

@c  emacspeak-bbdb.el
@c  emacspeak-gnus.el
@c  emacspeak-message.el
@c  emacspeak-rmail.el
@c  emacspeak-vm.el
@c  emacspeak-supercite.el
@c  emacspeak-mspools.el
@node Editting Program Source
@section Editting Program Source Code

Files containing program source code form a very specific class of
@b{structured} documents.
Unlike documents meant for human consumption that are often only loosely
structured, program source 
(as a concession to the computer's intolerance of lack of structure)
are per force well-structured and adhere to a fairly stringent  syntax. 

The Emacs environment provides editting modes that are specific to
creating and maintaining software written in 
most popular programming languages. Many of these editting modes are
speech-enabled by Emacspeak.
Speech-enabling these modes includes providing 
a rich set of navigational  commands that allow you to move 
through the source efficiently. In addition, Emacspeak's core
@b{voice-lock} facilities are used to produce audio formatted output 
--this helps you spot errors quickly.


@c  emacspeak-c.el
@c  emacspeak-perl.el
@c  emacspeak-tcl.el
@c  emacspeak-python.el
@c  emacspeak-jde.el
@c  emacspeak-make-mode.el
@c  emacspeak-sql.el


@node Development Environment
@section Software Development Environment


In addition to providing specialized editting modes for creating and
maintaining program source,
Emacs provides a rich set of software development tools that can be
combined to create powerful Integrated Development Environments (IDE).
These IDEs are speech-enabled by Emacspeak to provide a versatile and
powerful  environment for eyes-free software development.

@c  emacspeak-compile.el
@c  emacspeak-ediff.el
@c  emacspeak-gud.el
@c  emacspeak-oo-browser.el
@c  emacspeak-jde.el
@c  emacspeak-jde-help.el
@c  emacspeak-speedbar.el
@c  emacspeak-imenu.el



@node Desktop Management
@section Desktop Management

Emacs provides an integrated environment for performing all of ones
day-to-day computing tasks ranging from electronic messaging to software
development.
The environment derives its power from the fact that 
this integration allows for content to be handled across different tasks
in a seamless manner. 
In order to work effectively with large Emacs sessions with many
documents and applications open at the same time, the Emacspeak desktop
provides 
a powerful collection of desktop management tools designed to help the
user easily locate objects that pertain to a given task.

@c  emacspeak-buff-sel.el
@c  emacspeak-buff-menu.el
@c  emacspeak-dired.el
@c  emacspeak-view-process.el
@c  emacspeak-tar.el
@c  emacspeak-arc.el
@c  emacspeak-bookmark.el
@c  emacspeak-custom.el
@c  emacspeak-winring.el
@c   emacspeak-finder.el



@node Personal Information Management
@section Personal Information Management 
This section describes speech-enabled tools designed to aid in personal
information management such as maintaining a daily calendar.


@c  emacspeak-calendar.el
@c  emacspeak-hyperbole.el
@c  emacspeak-wrolo.el
@c  emacspeak-bbdb.el
@c  emacspeak-bookmark.el

@node  Desktop Applications
@section Desktop Applications 


@unnumbered subsection Spread Sheets

Spreadsheet applications present a two dimensional view of structured data
where the field values are (possibly) mutually dependent.  On the Emacspeak
desktop, a speech-enabled spreadsheet application can be used to manipulate
such data-driven documents%
ranging from simple cheque books and expense
reports to  complex investment portfolios.  Where the traditional visual
interface to spreadsheets is typically independent of the semantics of the
data stored in the spreadsheet, the speech-enabled interface is derived from
the @emph{ meaning} of the various fields making up the data.   When presenting such
information on a  visual display, implicit visual
layout can be used to cue the user to the meaning of different data fields.
On the other hand, in the case of an actively scrolling auditory display, the
spoken output needs to explicitly convey both the value and interpretation of
the different data items.  In addition, the interface needs to enable an
active dialogue between user and application where the user is able to query
the system about the possible meaning of a particular item of data.  Finally,
the aural interface needs to enable @emph{ multiple} views of the display.
In the visual interface, such @emph{ multiple} views are automatically
enabled by the two dimensional layout combined with the eye's ability to move
rapidly around the layout structure.  Thus, while viewing any particular row
of a portfolio, one can immediately see the current total value as well as
the net gain or loss.
The Emacs spread-sheet package @code{dismal} can be retrieved from
 @code{ftp://cs.nyu.edu/pub/local/fox/dismal}.

@unnumbered subsection Forms Mode


@emph{ Forms} mode  an Emacs mode designed to edit structured data
records like the line shown from file @code{ /etc/passwd} presents a
user-friendly visual interface that displays the field name along with the field
value.  The user can edit the field value and save the file, at which point
the data is written out using the underlying @code{ :} delimited
representation.  Mode @emph{ forms} provides a flexible interface to
associating meaning to the fields of such structured data files.  
For details on it use, see the forms-mode section of the online Emacs
info documentation.




@c  emacspeak-calc.el

@c  emacspeak-dismal.el
@c  emacspeak-remote.el
@c  emacspeak-entertain.el

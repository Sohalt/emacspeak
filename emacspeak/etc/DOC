DOC --- Automatically generated by command emacspeak-generate-documentation
$Id$
------------------------------------------------------------

** cd-tool	Key Sequence: control e DEL 

Front-end to CDTool.
Bind this function to a convenient key-
Emacspeak users automatically have 
this bound to <DEL> in the emacspeak keymap.

Key     Action
---     ------

+       Next Track
-       Previous Track
SPC     Pause or Resume
e       Eject
=       Shuffle
i       CD Info
p       Play
s       Stop
t       track
c       clip
cap C   Save clip to disk


------------------------------------------------------------

** dtk-add-cleanup-pattern	Key Sequence: control e d a 

Add this pattern to the list of repeating patterns that
are cleaned up.  Optional interactive prefix arg deletes
this pattern if previously added.  Cleaning up repeated
patterns results in emacspeak speaking the pattern followed
by a repeat count instead of speaking all the characters
making up the pattern.  Thus, by adding the repeating
pattern `.' (this is already added by default) emacspeak
will say ``aw fifteen dot'' when speaking the string
``...............'' instead of ``period period period period
''

------------------------------------------------------------

** dtk-notes-shutdownShutdown midi system.

------------------------------------------------------------

** dtk-pause	Key Sequence: control e p 

Pause ongoing speech.
The speech can be resumed with command `dtk-resume'
normally bound to C-e SPC.  Pausing speech is useful when one needs to
perform a few actions before continuing to read a large document.  Emacspeak
gives you speech feedback as usual once speech has been paused.  `dtk-resume'
continues the interrupted speech irrespective of the buffer
in which it is executed.
Optional PREFIX arg flushes any previously paused speech.

------------------------------------------------------------

** dtk-reset-state	Key Sequence: control e d  cap R  

Restore sanity to the Dectalk.
Typically used after the Dectalk has been power   cycled.

------------------------------------------------------------

** dtk-resume	Key Sequence: control e SPACE 

Resume paused speech.
This command resumes  speech that has been suspended by executing
command `dtk-pause' bound to C-e p.
If speech has not been paused,
and variable `dtk-resume-should-toggle' is t
 then this command will pause ongoing speech.

------------------------------------------------------------

** dtk-select-server	Key Sequence: control e d d 

Select a speech server interactively.
Argument PROGRAM specifies the speech server program.
When called  interactively, The selected server is started immediately. 

------------------------------------------------------------

** dtk-set-character-scale	Key Sequence: control e d f 

Set scale FACTOR for   speech rate.
Speech rate is scaled by this factor
when speaking characters.
Interactive PREFIX arg means set   the global default value, and then set the
current local  value to the result.

------------------------------------------------------------

** dtk-set-chunk-separator-syntax	Key Sequence: control e d RETURN 

Interactively set how text is split in chunks.
See the Emacs documentation on syntax tables for details on how characters are
classified into various syntactic classes.
Argument S specifies the syntax class.

------------------------------------------------------------

** dtk-set-predefined-speech-rate	Key Sequence: control e d 9   control e d 8   control e d 7   control e d 6   control e d 5   control e d 4   control e d 3   control e d 2   control e d 1   control e d 0 

Set speech rate to one of nine predefined levels.
Interactive PREFIX arg says to set the rate globally.
Formula used is:
rate = dtk-speech-rate-base + dtk-speech-rate-step * level.

------------------------------------------------------------

** dtk-set-punctuations	Key Sequence: control e d p 

Set punctuation mode to MODE.
Possible values are `some', `all', or `none'.
Interactive PREFIX arg means set   the global default value, and then set the
current local  value to the result.

------------------------------------------------------------

** dtk-set-punctuations-to-allSet punctuation  mode to all.
Interactive PREFIX arg sets punctuation mode globally.

------------------------------------------------------------

** dtk-set-punctuations-to-someSet punctuation  mode to some.
Interactive PREFIX arg sets punctuation mode globally.

------------------------------------------------------------

** dtk-set-rate	Key Sequence: control e d r 

Set speaking RATE for the tts.
Interactive PREFIX arg means set   the global default value, and then set the
current local  value to the result.

------------------------------------------------------------

** dtk-stop	Key Sequence: <pause>   control e s 

Stop speech now.

------------------------------------------------------------

** dtk-toggle-allcaps-beep	Key Sequence: control e d  cap C  

Toggle allcaps-beep.
when set, allcaps words  are  indicated by a
short beep.  Interactive PREFIX arg means toggle the global default
value, and then set the current local value to the result.
Note that allcaps-beep is a very useful thing when programming.
However it is irritating to have it on when reading documents.

------------------------------------------------------------

** dtk-toggle-capitalization	Key Sequence: control e d c 

Toggle capitalization.
when set, capitalization is indicated by a
short beep.  Interactive PREFIX arg means toggle the global default
value, and then set the current local value to the result.

------------------------------------------------------------

** dtk-toggle-debug	Key Sequence: control e d b 

Toggle state of the debug FLAG.
When debugging is on, you can switch to the buffer
*speaker* to examine the output from the process
that talks to the speech device by using command C-e d C-M-b.
Note: *speaker* is a hidden buffer, ie it has a leading space in its name.

------------------------------------------------------------

** dtk-toggle-punctuation-modeToggle punctuation mode between "some" and "all".
Interactive PREFIX arg makes the new setting global.

------------------------------------------------------------

** dtk-toggle-quiet	Key Sequence: control e d q 

Toggles state of  dtk-quiet.
Turning on this switch silences speech.
Optional interactive prefix arg causes this setting to become global.

------------------------------------------------------------

** dtk-toggle-speak-nonprinting-chars	Key Sequence: control e d n 

Toggle speak-nonprinting-chars.
Switches behavior of how characters with the high bit set are handled.
Interactive PREFIX arg means toggle the global default
value, and then set the current local value to the result.

------------------------------------------------------------

** dtk-toggle-split-caps	Key Sequence: control e d s 

Toggle split caps mode.
Split caps mode is useful when reading
Hungarian notation in program source code.  Interactive PREFIX arg
means toggle the global default value, and then set the current local
value to the result.

------------------------------------------------------------

** dtk-toggle-splitting-on-white-space	Key Sequence: control e d SPACE 

Toggle splitting of speech on white space.
This affects the internal state of emacspeak that decides if we split
text purely by clause boundaries, or also include
whitespace.  By default, emacspeak sends a clause at a time
to the speech device.  This produces fluent speech for
normal use.  However in modes such as `shell-mode' and some
programming language modes, clause markers appear
infrequently, and this can result in large amounts of text
being sent to the speech device at once, making the system
unresponsive when asked to stop talking.  Splitting on white
space makes emacspeak's stop command responsive.  However,
when splitting on white space, the speech sounds choppy
since the synthesizer is getting a word at a time.

------------------------------------------------------------

** dtk-toggle-stop-immediately-while-typing	Key Sequence: control e d  cap I  

Toggle state of variable `dtk-stop-immediately-while-typing'.
As the name implies, if T then speech flushes immediately as you
type.  Optional argument PREFIX specifies if the setting applies
to all buffers.

------------------------------------------------------------

** emacspeak-describe-emacspeak	Key Sequence: control h control e   <f1> control e   <help> control e 

Give a brief overview of emacspeak.

------------------------------------------------------------

** emacspeak-submit-bug	Key Sequence: control e CONTROL meta b 

Function to submit a bug to the programs maintainer.

------------------------------------------------------------

** emacspeak-amphetadeskOpen amphetadesk.

------------------------------------------------------------

** emacspeak-analog-backward-field-or-charMove back to next field if field specification is available.
Otherwise move to previous char.
Speak field or char moved to.

------------------------------------------------------------

** emacspeak-analog-forward-field-or-charMove forward to next field if field specification is available.
Otherwise move to next char.
Speak field or char moved to.

------------------------------------------------------------

** emacspeak-analog-next-lineMove down and speak current field.

------------------------------------------------------------

** emacspeak-analog-previous-lineMove up and speak current field.

------------------------------------------------------------

** emacspeak-analog-speak-this-fieldSpeak current field.

------------------------------------------------------------

** emacspeak-arc-speak-file-modification-timeSpeak modification time of the file on current line

------------------------------------------------------------

** emacspeak-arc-speak-file-nameSpeak the name of the file on current line

------------------------------------------------------------

** emacspeak-arc-speak-file-permissionsSpeak permissions of file current entry 

------------------------------------------------------------

** emacspeak-arc-speak-file-sizeSpeak the size of the file on current line

------------------------------------------------------------

** emacspeak-aumix	Key Sequence: control e ( 

Setup output parameters of the auditory display.
 Launch this tool while you have auditory output on
multiple channels playing so you can
adjust the settings to your preference.  Hit q to quit when
you are done.

------------------------------------------------------------

** emacspeak-aumix-editEdit aumix settings interactively. 
Run command M-x emacspeak-aumix-reset
after saving the settings to have them take effect.

------------------------------------------------------------

** emacspeak-aumix-resetReset to default audio settings.

------------------------------------------------------------

** emacspeak-aumix-volume-decreaseDecrease overall volume. 

------------------------------------------------------------

** emacspeak-aumix-volume-increaseIncrease overall volume. 

------------------------------------------------------------

** emacspeak-aumix-wave-decrease	Key Sequence: control e control f <left> 

Decrease volume of wave output. 

------------------------------------------------------------

** emacspeak-aumix-wave-increase	Key Sequence: control e control f <right> 

Increase volume of wave output. 

------------------------------------------------------------

** emacspeak-bs-speak-buffer-lineSpeak information about this buffer

------------------------------------------------------------

** emacspeak-list-buffers-next-lineSpeech enabled buffer menu navigation

------------------------------------------------------------

** emacspeak-list-buffers-previous-lineSpeech enabled buffer menu navigation

------------------------------------------------------------

** emacspeak-list-buffers-speak-buffer-lineSpeak information about this buffer

------------------------------------------------------------

** emacspeak-list-buffers-speak-buffer-nameSpeak the name of the buffer on this line

------------------------------------------------------------

** emacspeak-c-speak-semanticsSpeak the C semantics of this line. 

------------------------------------------------------------

** emacspeak-appt-repeat-announcement	Key Sequence: control e  cap A  

Speaks the most recently displayed appointment message if any.

------------------------------------------------------------

** emacspeak-speak-calendar-dateSpeak the date under point when called in Calendar Mode. 

------------------------------------------------------------

** emacspeak-compilation-speak-errorSpeech feedback about the compilation error. 

------------------------------------------------------------

** emacspeak-custom-goto-groupJump to custom group when in a customization buffer.

------------------------------------------------------------

** emacspeak-custom-goto-toolbarJump to custom toolbar when in a customization buffer.

------------------------------------------------------------

** emacspeak-daisy-define-outline-patternDefine persistent outline regexp for this book.

------------------------------------------------------------

** emacspeak-daisy-mark-position-in-content-under-pointMark current position in displayed content.
No-op if content under point is not currently displayed.

------------------------------------------------------------

** emacspeak-daisy-modeA DAISY front-end for the Emacspeak desktop.

Pre-requisites:

0) mpg123 for playing mp3 files
1) libxml and libxslt packages 
2) xml-parse.el for parsing XML in Emacs Lisp.

The Emacspeak DAISY front-end is launched by command
emacspeak-daisy-open-book  bound to C-e C-b.  

This command switches to a special buffer that has DAISY
commands bounds to single keystrokes-- see the ke-binding
list at the end of this description.  Use Emacs online help
facility to look up help on these commands.

emacspeak-daisy-mode provides the necessary functionality to
navigate and listen to Daisy talking books. 

Here is a list of all emacspeak DAISY commands along with their key-bindings:

key             binding
---             -------

P		emacspeak-daisy-play-page-range
RET		emacspeak-daisy-play-content-under-point
SPC		emacspeak-daisy-play-audio-under-point
q		bury-buffer
S		emacspeak-daisy-save-bookmarks
o		emacspeak-daisy-define-outline-pattern
p		emacspeak-daisy-previous-line
n		emacspeak-daisy-next-line
s		emacspeak-daisy-stop-audio
m		emacspeak-daisy-mark-position-in-content-under-point
?		describe-mode



In addition to any hooks its parent mode `text-mode' might have run,
this mode runs the hook `emacspeak-daisy-mode-hook', as the final step
during initialization.

------------------------------------------------------------

** emacspeak-daisy-next-lineMove to next line.

------------------------------------------------------------

** emacspeak-daisy-open-book	Key Sequence: control e control b 

Open Digital Talking Book specified by navigation file filename.

This is the main entry point to the  Emacspeak Daisy reader.
Opening a Daisy navigation file (.ncx file) results in a
navigation buffer that can be used to browse and read the book.

------------------------------------------------------------

** emacspeak-daisy-play-audio-under-pointPlay audio clip under point.

------------------------------------------------------------

** emacspeak-daisy-play-content-under-pointPlay SMIL content  under point.

------------------------------------------------------------

** emacspeak-daisy-play-page-rangePlay pages in specified page range.

------------------------------------------------------------

** emacspeak-daisy-previous-lineMove to previous line.

------------------------------------------------------------

** emacspeak-daisy-save-bookmarksSave bookmarks for current book.

------------------------------------------------------------

** emacspeak-daisy-stop-audioStop audio.

------------------------------------------------------------

** emacspeak-dired-label-fieldsLabels the fields of the listing in the dired buffer.
Currently is a no-op  unless
unless `dired-listing-switches' contains -al

------------------------------------------------------------

** emacspeak-dired-show-file-typePrint the type of FILE, according to the `file' command.
If FILE is a symbolic link and the optional argument DEREF-SYMLINKS is
true then the type of the file linked to by FILE is printed instead.

------------------------------------------------------------

** emacspeak-dired-speak-file-access-timeSpeak access time  of the current file.

------------------------------------------------------------

** emacspeak-dired-speak-file-modification-timeSpeak modification time  of the current file.

------------------------------------------------------------

** emacspeak-dired-speak-file-permissionsSpeak the permissions of the current file.

------------------------------------------------------------

** emacspeak-dired-speak-file-sizeSpeak the size of the current file.
On a directory line, run du -s on the directory to speak its size.

------------------------------------------------------------

** emacspeak-dired-speak-header-lineSpeak the header line of the dired buffer. 

------------------------------------------------------------

** emacspeak-dired-speak-symlink-targetSpeaks the target of the symlink on the current line.

------------------------------------------------------------

** emacspeak-dismal-backward-col-and-summarizeMove backward by arg columns
 (the previous column by default)and summarize it.

------------------------------------------------------------

** emacspeak-dismal-backward-row-and-summarizeMove backward by arg rows
 (the previous row by default)and summarize it.

------------------------------------------------------------

** emacspeak-dismal-col-summarizeSummarizes a col using the specification in list
emacspeak-dismal-col-summarizer-list

------------------------------------------------------------

** emacspeak-dismal-display-cell-expressionDisplay the expression in the message area

------------------------------------------------------------

** emacspeak-dismal-display-cell-valueDisplay the cell value in the message area

------------------------------------------------------------

** emacspeak-dismal-display-cell-with-col-headerDisplay current cell along with its column header.
The `column header' is the entry in row 0.

------------------------------------------------------------

** emacspeak-dismal-display-cell-with-row-headerDisplays current cell along with its row header.
The `row header' is the entry in column 0.

------------------------------------------------------------

** emacspeak-dismal-forward-col-and-summarizeMove forward by arg columns
 (the next column by default)and summarize it.

------------------------------------------------------------

** emacspeak-dismal-forward-row-and-summarizeMove forward by arg rows
 (the next row by default)and summarize it.

------------------------------------------------------------

** emacspeak-dismal-row-summarizeSummarizes a row using the specification in list
emacspeak-dismal-row-summarizer-list

------------------------------------------------------------

** emacspeak-dismal-set-col-summarizer-listSpecify or reset col summarizer list.

------------------------------------------------------------

** emacspeak-dismal-set-row-summarizer-listSpecify or reset row summarizer list.

------------------------------------------------------------

** emacspeak-dismal-set-sheet-summarizer-listSpecify or reset sheet summarizer list.

------------------------------------------------------------

** emacspeak-dismal-sheet-summarizeSummarizes a sheet using the specification in list
emacspeak-dismal-sheet-summarizer-list

------------------------------------------------------------

** emacspeak-ecb-speak-window-directoriesSpeak contents of directories window.

------------------------------------------------------------

** emacspeak-ecb-speak-window-historySpeak contents of history window.

------------------------------------------------------------

** emacspeak-ecb-speak-window-methodsSpeak contents of methods window.

------------------------------------------------------------

** emacspeak-ecb-speak-window-sourcesSpeak contents of sources window.

------------------------------------------------------------

** emacspeak-ecb-tree-backspaceBack up during incremental search in tree buffers.

------------------------------------------------------------

** emacspeak-ecb-tree-clearClear search pattern during incremental search in tree buffers.

------------------------------------------------------------

** emacspeak-ecb-tree-expand-common-prefixExpand to longest common prefix in tree buffer.

------------------------------------------------------------

** emacspeak-ecb-tree-shift-returnDo shift return in ECB tree browser.

------------------------------------------------------------

** emacspeak-ediff-speak-current-differenceSpeak the current difference

------------------------------------------------------------

** emacspeak-enriched-voiceify-facesMap base fonts to voices.
Useful in voicifying rich text.

------------------------------------------------------------

** emacspeak-hangman-speak-guessSpeak current guessed string. 

------------------------------------------------------------

** emacspeak-hangman-speak-statisticsSpeak statistics.

------------------------------------------------------------

** emacspeak-eperiodic-goto-property-sectionMark position and jump to properties section.

------------------------------------------------------------

** emacspeak-eperiodic-next-lineMove to next row and speak element.

------------------------------------------------------------

** emacspeak-eperiodic-previous-lineMove to next row and speak element.

------------------------------------------------------------

** emacspeak-eperiodic-speak-current-elementSpeak element at point.

------------------------------------------------------------

** emacspeak-erc-add-name-to-monitorAdd people to monitor in this room.

------------------------------------------------------------

** emacspeak-erc-delete-name-from-monitorRemove name to monitor in this room.

------------------------------------------------------------

** emacspeak-erc-setup-cricket-rulesSet up #cricket channels.

------------------------------------------------------------

** emacspeak-erc-toggle-my-monitorToggle state of ERC  monitor of my messages.
Interactive PREFIX arg means toggle the global default value, and then
set the current local value to the result.

------------------------------------------------------------

** emacspeak-erc-toggle-room-monitorToggle state of ERC room monitor.
Interactive 
PREFIX arg means toggle the global default value, and then
set the current local value to the result.

------------------------------------------------------------

** emacspeak-erc-toggle-speak-all-participantsToggle state of ERC speak all participants..
Interactive 
PREFIX arg means toggle the global default value, and then
set the current local value to the result.

------------------------------------------------------------

** emacspeak-eterm-copy-region-to-registerCopy text from terminal to an Emacs REGISTER.
This copies  region delimited by the emacspeak eterm marker 
set by command M-x emacspeak-eterm-set-marker and the 
emacspeak eterm pointer to a register.

This function is advised.

Before-advice `emacspeak-auto':
Automatically defined advice to speak interactive prompts. 

------------------------------------------------------------

** emacspeak-eterm-define-windowPrompt for a window ID.
The window is then define to be
the rectangle delimited by point and eterm mark.  This is to
be used when emacspeak is set to review mode inside an
eterm.

------------------------------------------------------------

** emacspeak-eterm-describe-windowDescribe an eterm  window.
Description indicates eterm window coordinates and whether it is stretchable

------------------------------------------------------------

** emacspeak-eterm-goto-lineMove emacspeak eterm pointer to a specified LINE.

------------------------------------------------------------

** emacspeak-eterm-kill-ring-save-regionCopy text from terminal to kill ring.
This copies  region delimited by the emacspeak eterm marker 
set by command M-x emacspeak-eterm-set-marker and the 
emacspeak eterm pointer.

------------------------------------------------------------

** emacspeak-eterm-maybe-send-rawSend a raw character through if in the terminal buffer.
Execute end of line if
in a non eterm buffer if executed via C-e C-e

------------------------------------------------------------

** emacspeak-eterm-paste-registerPaste contents of REGISTER at current location.
If the specified register contains text, then that text is
sent to the terminal as if it were typed by the user.

------------------------------------------------------------

** emacspeak-eterm-pointer-backward-wordMove the pointer backward  by words. 
Interactive numeric prefix arg specifies number of words to move.
Argument COUNT specifies number of words by which to move.

------------------------------------------------------------

** emacspeak-eterm-pointer-downMove the pointer down a line.
Argument COUNT specifies number of lines by which to move.

------------------------------------------------------------

** emacspeak-eterm-pointer-forward-wordMove the pointer forward by words. 
Interactive numeric prefix arg specifies number of words to move.
Argument COUNT specifies number of words by which to move.

------------------------------------------------------------

** emacspeak-eterm-pointer-leftMove the pointer left.
Argument COUNT specifies number of columns by which to move.

------------------------------------------------------------

** emacspeak-eterm-pointer-rightMove the pointer right.
Argument COUNT specifies number of columns by which to move.

------------------------------------------------------------

** emacspeak-eterm-pointer-to-bottomMove the pointer to the bottom  of the screen.

------------------------------------------------------------

** emacspeak-eterm-pointer-to-cursorMove the pointer to the cursor.

------------------------------------------------------------

** emacspeak-eterm-pointer-to-left-edgeMove the pointer to the right edge.

------------------------------------------------------------

** emacspeak-eterm-pointer-to-next-color-changeMove the eterm pointer to the next color change.
This allows you to move between highlighted regions of the screen.
Optional argument COUNT specifies how many changes to skip.

------------------------------------------------------------

** emacspeak-eterm-pointer-to-previous-color-changeMove the eterm pointer to the next color change.
This allows you to move between highlighted regions of the screen.
Optional argument COUNT specifies how many changes to skip.

------------------------------------------------------------

** emacspeak-eterm-pointer-to-right-edgeMove the pointer to the right edge.

------------------------------------------------------------

** emacspeak-eterm-pointer-to-topMove the pointer to the top of the screen.

------------------------------------------------------------

** emacspeak-eterm-pointer-upMove the pointer up a line.
Argument COUNT .specifies number of lines by which to move.

------------------------------------------------------------

** emacspeak-eterm-remote-term	Key Sequence: control e CONTROL meta r 

Start a terminal-emulator in a new buffer.

------------------------------------------------------------

** emacspeak-eterm-search-backwardSearch backward on the terminal.

------------------------------------------------------------

** emacspeak-eterm-search-forwardSearch forward on the terminal.

------------------------------------------------------------

** emacspeak-eterm-set-filter-windowPrompt for the id of a predefined window,
and set the `filter' window to it.
Non-nil interactive prefix arg `unsets' the filter window;
this is equivalent to having the entire terminal as the filter window (this is
what eterm starts up with).
Setting the filter window results in emacspeak  only monitoring screen
activity within the filter window.

------------------------------------------------------------

** emacspeak-eterm-set-focus-windowPrompt for the id of a predefined window,
and set the `focus' window to it.
Non-nil interactive prefix arg `unsets' the focus window;
this is equivalent to having the entire terminal as the focus window (this is
what eterm starts up with).
Setting the focus window results in emacspeak  monitoring screen
and speaking that window upon seeing screen activity.

------------------------------------------------------------

** emacspeak-eterm-set-markerSet Emacspeak eterm marker.
This sets  the emacspeak eterm marker to the position pointed 
to by the emacspeak eterm pointer.

------------------------------------------------------------

** emacspeak-eterm-speak-cursorSpeak cursor position.

------------------------------------------------------------

** emacspeak-eterm-speak-pointerSpeak current pointer position.

------------------------------------------------------------

** emacspeak-eterm-speak-pointer-charSpeak char under eterm pointer.
Pronounces character phonetically unless  called with a PREFIX arg.

------------------------------------------------------------

** emacspeak-eterm-speak-pointer-lineSpeak the line the pointer is on.

------------------------------------------------------------

** emacspeak-eterm-speak-pointer-wordSpeak the word  the pointer is on.

------------------------------------------------------------

** emacspeak-eterm-speak-predefined-windowSpeak a predefined eterm window between 1 and 10.

------------------------------------------------------------

** emacspeak-eterm-speak-screenSpeak the screen.  Default is to speak from the emacspeak pointer  to point.
Optional prefix arg FLAG causes region above
the Emacspeak pointer to be spoken.

------------------------------------------------------------

** emacspeak-eterm-speak-windowSpeak an eterm window.
Argument ID specifies the window.

------------------------------------------------------------

** emacspeak-eterm-toggle-filter-windowToggle active state of filter window.

------------------------------------------------------------

** emacspeak-eterm-toggle-focus-windowToggle active state of focus window.

------------------------------------------------------------

** emacspeak-eterm-toggle-pointer-modeToggle emacspeak eterm pointer mode.
With optional interactive prefix  arg, turn it on.
When emacspeak eterm is in pointer mode, the eterm read pointer
stays where it is rather than automatically moving to the terminal cursor when
there is terminal activity.

------------------------------------------------------------

** emacspeak-eterm-toggle-reviewToggle state of eterm review. 
In review mode, you can move around the terminal and listen to the contnets 
without sending input to the terminal itself.

------------------------------------------------------------

** emacspeak-eterm-yank-windowYank contents of  an eterm window at point.

------------------------------------------------------------

** emacspeak-toggle-eterm-autospeakToggle state of eterm autospeak.
When eterm autospeak is turned on and the terminal is in line mode,
all output to the terminal is automatically spoken. 
  Interactive prefix arg means toggle  the global default value, and then set the
  current local  value to the result. 

------------------------------------------------------------

** emacspeak-eudc-send-mailSend email to the address given by the current record. 

------------------------------------------------------------

** emacspeak-filtertext	Key Sequence: control e ^ 

Copy over text in region to special filtertext buffer in
preparation for interactively filtering text. 

------------------------------------------------------------

** emacspeak-filtertext-modeMajor mode for FilterText interaction. 


key             binding
---             -------

r		emacspeak-filtertext-revert
^		flush-lines
=		keep-lines



In addition to any hooks its parent mode `text-mode' might have run,
this mode runs the hook `emacspeak-filtertext-mode-hook', as the final step
during initialization.

------------------------------------------------------------

** emacspeak-filtertext-revertRevert to original text.

------------------------------------------------------------

** emacspeak-fix-all-recent-commandsFix recently loaded interactive commands.
This command looks through `load-history' and fixes commands if necessary.
Memoizes call in emacspeak-load-history-pointer to memoize this call. 

------------------------------------------------------------

** emacspeak-fix-commands-loaded-fromFix all commands loaded from a specified module.

------------------------------------------------------------

** emacspeak-forms-find-fileVisit a forms file

------------------------------------------------------------

** emacspeak-forms-flush-unwanted-recordsPrompt for pattern and flush matching lines

------------------------------------------------------------

** emacspeak-forms-rerun-filterRerun  filter --allows us to nuke more matching records

------------------------------------------------------------

** emacspeak-forms-speak-fieldSpeak current form field name and value.
Assumes that point is at the front of a field value.

------------------------------------------------------------

** emacspeak-forms-summarize-current-positionSummarize current position in list of records

------------------------------------------------------------

** emacspeak-forms-summarize-current-recordSummarize current record

------------------------------------------------------------

** emacspeak-freeamp	Key Sequence: control e control f o 

Play specified resource using freeamp.
Resource is an  MP3 file or m3u playlist.
The player is placed in a buffer in emacspeak-freeamp-mode.

------------------------------------------------------------

** emacspeak-freeamp-freeamp-call-command	Key Sequence: control e control f q   control e control f =   control e control f s   control e control f b   control e control f f   control e control f -   control e control f +   control e control f p 

Call appropriate freeamp command.

------------------------------------------------------------

** emacspeak-freeamp-freeamp-commandExecute FreeAmp command.

This function is advised.

Before-advice `emacspeak-auto':
Automatically defined advice to speak interactive prompts. 

------------------------------------------------------------

** emacspeak-freeamp-modeMajor mode for freeamp interaction. 


key             binding
---             -------

<right>		emacspeak-aumix-wave-increase
<left>		emacspeak-aumix-wave-decrease
q		emacspeak-freeamp-freeamp-call-command
=		emacspeak-freeamp-freeamp-call-command
s		emacspeak-freeamp-freeamp-call-command
b		emacspeak-freeamp-freeamp-call-command
f		emacspeak-freeamp-freeamp-call-command
-		emacspeak-freeamp-freeamp-call-command
+		emacspeak-freeamp-freeamp-call-command
p		emacspeak-freeamp-freeamp-call-command
o		emacspeak-freeamp



This mode runs the hook `emacspeak-freeamp-mode-hook', as the final step
during initialization.

------------------------------------------------------------

** emacspeak-gnus-summary-catchup-quietly-and-exitCatch up on all articles in current group.

------------------------------------------------------------

** emacspeak-gomoku-display-statisticsDisplay statistics from previous games

------------------------------------------------------------

** emacspeak-gomoku-goto-x-yPrompt for and go to that square.

------------------------------------------------------------

** emacspeak-gomoku-show-current-columnAurally display current column

------------------------------------------------------------

** emacspeak-gomoku-show-current-negative-diagonalAurally display current negative sloped diagonal 

------------------------------------------------------------

** emacspeak-gomoku-show-current-positive-diagonalAurally display current positively sloped diagonal

------------------------------------------------------------

** emacspeak-gomoku-show-current-rowAurally display current row

------------------------------------------------------------

** emacspeak-gomoku-speak-emacs-previous-moveSpeak emacs' previous move

------------------------------------------------------------

** emacspeak-gomoku-speak-humans-previous-moveSpeak human' previous move

------------------------------------------------------------

** emacspeak-gomoku-speak-number-of-movesSpeak number of moves so far

------------------------------------------------------------

** emacspeak-gomoku-speak-squareSpeak coordinates and state of square at point

------------------------------------------------------------

** emacspeak-gridtext-apply	Key Sequence: control e # a 

Apply grid to region.

------------------------------------------------------------

** emacspeak-gridtext-load	Key Sequence: control e # l 

Load saved grid settings.

------------------------------------------------------------

** emacspeak-gridtext-save	Key Sequence: control e # s 

Save out grid settings.

------------------------------------------------------------

** emacspeak-hide-or-expose-all-blocksHide or expose all blocks in buffer.

------------------------------------------------------------

** emacspeak-hide-or-expose-block	Key Sequence: control e j 

Hide or expose a block of text.
This command either hides or exposes a block of text
starting on the current line.  A block of text is defined as
a portion of the buffer in which all lines start with a
common PREFIX.  Optional interactive prefix arg causes all
blocks in current buffer to be hidden or exposed.

------------------------------------------------------------

** emacspeak-hide-speak-block-sans-prefix	Key Sequence: control e control j 

Speaks current block after stripping its prefix.
If the current block is not hidden, it first hides it.
This is useful because as you locate blocks, you can invoke this
command to listen to the block,
and when you have heard enough navigate easily  to move past the block.

------------------------------------------------------------

** emacspeak-ibuffer-speak-buffer-lineSpeak information about this buffer

------------------------------------------------------------

** emacspeak-imcomStart IMCom.

------------------------------------------------------------

** emacspeak-imcom-modeMajor mode for Jabber interaction using IMCom.


key             binding
---             -------

C-c		Prefix Command

C-c v		emacspeak-imcom-view-chat-session



In addition to any hooks its parent mode `comint-mode' might have run,
this mode runs the hook `emacspeak-imcom-mode-hook', as the final step
during initialization.

------------------------------------------------------------

** emacspeak-imcom-view-chat-sessionDisplay specified chat session.

------------------------------------------------------------

** emacspeak-imenu-goto-next-index-positionGoto the next index position in current buffer

------------------------------------------------------------

** emacspeak-imenu-goto-previous-index-positionGoto the previous index position in current buffer

------------------------------------------------------------

** emacspeak-imenu-speak-this-sectionSpeak upto start of next index entry

------------------------------------------------------------

** emacspeak-info-speak-headerSpeak info header line.

------------------------------------------------------------

** emacspeak-info-wizard	Key Sequence: control h TAB   <f1> TAB   <help> TAB 

Read a node spec from the minibuffer and launch
Info-goto-node.
See documentation for command `Info-goto-node' for details on
node-spec.

------------------------------------------------------------

** emacspeak-keymap-choose-new-emacspeak-prefixInteractively select a new prefix key to use for all emacspeak
commands.  The default is to use `C-e'  This command
lets you switch the prefix to something else.  This is a useful thing
to do if you run emacspeak on a remote machine from inside a terminal
that is running inside a local emacspeak session.  You can have the
remote emacspeak use a different control key to give your fingers some
relief.

This function is advised.

Before-advice `emacspeak-auto':
Automatically defined advice to speak interactive prompts. 

------------------------------------------------------------

** emacspeak-kotl-setup-keysSetup additional keybindings

------------------------------------------------------------

** emacspeak-kotl-speak-cellSpeak cell contents from point to end of cell.
  With prefix arg, speaks entire cell contents

------------------------------------------------------------

** emacspeak-toggle-comint-output-monitor	Key Sequence: control e o 

Toggle state of Emacspeak comint monitor.
When turned on, comint output is automatically spoken.  Turn this on if
you want your shell to speak its results.  Interactive
PREFIX arg means toggle the global default value, and then
set the current local value to the result.

------------------------------------------------------------

** emacspeak-m-player	Key Sequence: control e : 

Play specified resource using m-player.
Resource is an  MP3 file or m3u playlist.
The player is placed in a buffer in emacspeak-m-player-mode.

------------------------------------------------------------

** emacspeak-m-player-alt-src-stepMove within an ASF playlist.

------------------------------------------------------------

** emacspeak-m-player-modeMajor mode for m-player interaction. 


key             binding
---             -------

q		emacspeak-m-player-quit
SPC		emacspeak-m-player-pause
a		emacspeak-m-player-alt-src-step
P		emacspeak-m-player-play-tree-up
p		emacspeak-m-player-play-tree-step
S		emacspeak-m-player-seek-absolute
s		emacspeak-m-player-seek-relative
<right>		emacspeak-aumix-wave-increase
<left>		emacspeak-aumix-wave-decrease



In addition to any hooks its parent mode `comint-mode' might have run,
this mode runs the hook `emacspeak-m-player-mode-hook', as the final step
during initialization.

------------------------------------------------------------

** emacspeak-m-player-pausePause or unpause media player.

------------------------------------------------------------

** emacspeak-m-player-play-tree-stepMove within the play tree.

------------------------------------------------------------

** emacspeak-m-player-play-tree-upMove within the play tree.

------------------------------------------------------------

** emacspeak-m-player-quitQuit media player.

------------------------------------------------------------

** emacspeak-m-player-seek-absoluteSeek  to absolute specified position.

------------------------------------------------------------

** emacspeak-m-player-seek-relativeSeek  by offset into stream from current position.

------------------------------------------------------------

** emacspeak-man-browse-man-pageBrowse the man page --read it a paragraph at a time

------------------------------------------------------------

** emacspeak-man-speak-this-sectionSpeak current section

------------------------------------------------------------

** emacspeak-mp3-playlist-playPlay a playlist. 
Optional interactive prefix arg says not to shuffle  the list. 
Use command M-x emacspeak-mp3-playlist-skip 
to skip to the next track. 

------------------------------------------------------------

** emacspeak-mp3-playlist-skipSkip currently playing track. 

------------------------------------------------------------

** emacspeak-mp3-playlist-stopKill currently playing playlist. 

------------------------------------------------------------

** emacspeak-mpg123-backward-minuteMove back by specified number of minutes.

------------------------------------------------------------

** emacspeak-mpg123-forward-minuteForward by ARG minutes.

------------------------------------------------------------

** emacspeak-mpg123-speak-current-timeSpeak time in current track.

------------------------------------------------------------

** emacspeak-mpg123-speak-filenameSpeak filename of the current song.

------------------------------------------------------------

** emacspeak-mpg123-speak-lengthSpeak duration of the current song.

------------------------------------------------------------

** emacspeak-mpg123-speak-titleSpeak title of the current song.

------------------------------------------------------------

** emacspeak-ocr	Key Sequence: control e control o 

An OCR front-end for the Emacspeak desktop.  

Page image is acquired using tools from the SANE package.
The acquired image is run through the OCR engine if one is
available, and the results placed in a buffer that is
suitable for browsing the results.

For detailed help, invoke command emacspeak-ocr bound to
C-e C-o to launch emacspeak-ocr-mode, and press
`?' to display mode-specific help for emacspeak-ocr-mode.

------------------------------------------------------------

** emacspeak-ocr-backward-pageLike backward page, but tracks page number of current document.

------------------------------------------------------------

** emacspeak-ocr-customizeCustomize OCR settings.

------------------------------------------------------------

** emacspeak-ocr-forward-pageLike forward page, but tracks page number of current document.

------------------------------------------------------------

** emacspeak-ocr-mode An OCR front-end for the Emacspeak desktop.

Pre-requisites:

1) A working scanner back-end like SANE on Linux.

2) An OCR engine.

1: Make sure your scanner back-end works, and that you have
the utilities to scan a document and acquire an image as a
tiff file.  Then set variable
emacspeak-ocr-scan-image-program to point at this utility.
By default, this is set to `scanimage' which is the image
scanning utility provided by SANE.

By default, this front-end attempts to compress the acquired
tiff image; make sure you have a utility like tiffcp.
Variable emacspeak-ocr-compress-image is set to `tiffcp' by
default; if you use something else, you should customize
this variable.

2: Next, make sure you have an OCR engine installed and
working.  By default this front-end assumes that OCR is
available as /usr/bin/ocr.

Once you have ensured that acquiring an image and applying
OCR to it work independently of Emacs, you can use this
Emacspeak front-end to enable easy OCR access from within
Emacspeak.

The Emacspeak OCR front-end is launched by command
emacspeak-ocr bound to C-e C-o.  

This command switches to a special buffer that has OCR
commands bounds to single keystrokes-- see the ke-binding
list at the end of this description.  Use Emacs online help
facility to look up help on these commands.

emacspeak-ocr-mode provides the necessary functionality to
scan, OCR, read and save documents.  By default, scanned
images and the resulting text are saved under directory
~/ocr; see variable emacspeak-ocr-working-directory.
Invoking command emacspeak-ocr-open-working-directory bound
to M-x emacspeak-ocr-open-working-directory will open this directory.

By default, the document being scanned is named `untitled'.
You can name the document by using command
emacspeak-ocr-name-document bound to
M-x emacspeak-ocr-name-document.  The document name is used
in constructing the name of the image and text files.

Key Bindings: 

See key             binding
---             -------

9		emacspeak-ocr-page
8		emacspeak-ocr-page
7		emacspeak-ocr-page
6		emacspeak-ocr-page
5		emacspeak-ocr-page
4		emacspeak-ocr-page
3		emacspeak-ocr-page
2		emacspeak-ocr-page
1		emacspeak-ocr-page
C		emacspeak-ocr-set-compress-image-options
I		emacspeak-ocr-set-scan-image-options
SPC		emacspeak-ocr-read-current-page
s		emacspeak-ocr-save-current-page
p		emacspeak-ocr-page
]		emacspeak-ocr-forward-page
[		emacspeak-ocr-backward-page
d		emacspeak-ocr-open-working-directory
n		emacspeak-ocr-name-document
o		emacspeak-ocr-recognize-image
j		emacspeak-ocr-scan-photo
i		emacspeak-ocr-scan-image
RET		emacspeak-ocr-scan-and-recognize
w		emacspeak-ocr-write-document
q		bury-buffer
c		emacspeak-ocr-customize
?		describe-mode

.


In addition to any hooks its parent mode `text-mode' might have run,
this mode runs the hook `emacspeak-ocr-mode-hook', as the final step
during initialization.

------------------------------------------------------------

** emacspeak-ocr-name-documentName document being scanned in the current OCR buffer.
Pick a short but meaningful name.

------------------------------------------------------------

** emacspeak-ocr-open-working-directoryLaunch dired on OCR working directory.

------------------------------------------------------------

** emacspeak-ocr-pageMove to specified page.

------------------------------------------------------------

** emacspeak-ocr-read-current-pageSpeaks current page.

------------------------------------------------------------

** emacspeak-ocr-recognize-imageRun OCR engine on current image.
Prompts for image file if file corresponding to the expected
`current page' is not found.

------------------------------------------------------------

** emacspeak-ocr-save-current-pageWrites out recognized text from current page
to an appropriately named file.

------------------------------------------------------------

** emacspeak-ocr-scan-and-recognizeScan in a page and run OCR engine on it.
Use this command once you've verified that the separate
steps of acquiring an image and running the OCR engine work
correctly by themselves.

------------------------------------------------------------

** emacspeak-ocr-scan-imageAcquire page image.

------------------------------------------------------------

** emacspeak-ocr-scan-photoScan in a photograph.
The scanned image is converted to JPEG.

------------------------------------------------------------

** emacspeak-ocr-set-compress-image-optionsInteractively update  image compression options.
Prompts with current setting in the minibuffer.
Setting persists for current Emacs session.

------------------------------------------------------------

** emacspeak-ocr-set-scan-image-optionsInteractively update scan image options.
Prompts with current setting in the minibuffer.
Setting persists for current Emacs session.

------------------------------------------------------------

** emacspeak-ocr-write-documentWrites out recognized text from all pages in current document.

------------------------------------------------------------

** emacspeak-outline-speak-backward-headingAnalogous to outline-backward-same-level
except that the outline section is optionally spoken

------------------------------------------------------------

** emacspeak-outline-speak-forward-headingAnalogous to outline-forward-same-level,
except that the outline section is optionally spoken

------------------------------------------------------------

** emacspeak-outline-speak-next-headingAnalogous to outline-next-visible-heading,
except that the outline section is optionally spoken

------------------------------------------------------------

** emacspeak-outline-speak-previous-headingAnalogous to outline-previous-visible-heading,
except that the outline section is optionally spoken

------------------------------------------------------------

** emacspeak-outline-speak-this-headingSpeak current outline section starting from point

------------------------------------------------------------

** emacspeak-pronounce-clear-dictionariesClear all current pronunciation dictionaries.

------------------------------------------------------------

** emacspeak-pronounce-define-local-pronunciationDefine buffer local pronunciation.
Argument WORD specifies the word which should be pronounced as specified by PRONUNCIATION.

------------------------------------------------------------

** emacspeak-pronounce-define-pronunciationInteractively define entries in the pronunciation dictionaries.
Default term to define is delimited by region.
First loads any persistent dictionaries if not already loaded.

------------------------------------------------------------

** emacspeak-pronounce-define-template-pronunciationInteractively define template entries in the pronunciation dictionaries.
Default term to define is delimited by region.
First loads any persistent dictionaries if not already loaded.

------------------------------------------------------------

** emacspeak-pronounce-dispatch	Key Sequence: control e meta d 

Provides the user interface front-end to Emacspeak's pronunciation dictionaries.

------------------------------------------------------------

** emacspeak-pronounce-edit-pronunciationsPrompt for and launch a pronunciation editor on the
specified pronunciation dictionary key.

------------------------------------------------------------

** emacspeak-pronounce-load-dictionariesLoad pronunciation dictionaries.
Optional argument FILENAME specifies the dictionary file.

------------------------------------------------------------

** emacspeak-pronounce-refresh-pronunciationsRefresh pronunciation table for current buffer.
Activates pronunciation dictionaries if not already active.

------------------------------------------------------------

** emacspeak-pronounce-save-dictionariesWrites out the persistent emacspeak pronunciation dictionaries.

------------------------------------------------------------

** emacspeak-pronounce-toggle-use-of-dictionariesToggle use of pronunciation dictionaries in current buffer.
Pronunciations can be defined on a per file, per directory and/or per
mode basis.
Pronunciations are activated on a per buffer basis.
Turning on the use of pronunciation dictionaries results in emacspeak
composing a pronunciation table based on the currently defined
pronunciation dictionaries.
After this, the pronunciations will be applied whenever text in the
buffer is spoken.
Optional argument state can be used from Lisp programs to
explicitly turn pronunciations on or off.

------------------------------------------------------------

** emacspeak-pronounce-yank-wordYank word at point into minibuffer.

------------------------------------------------------------

** emacspeak-psgml-speak-current-elementSpeak contents of current element. 

------------------------------------------------------------

** emacspeak-psgml-summarize-elementContext-sensitive element summarizer.

------------------------------------------------------------

** emacspeak-psgml-toggle-interactive-font-lockToggles variable sgml-set-face.
When turned on, the  buffer is font locked interactively.
Leave this off in general while editting.

------------------------------------------------------------

** emacspeak-xml-browse-modeMode for browsing XML documents.



Uses keymap "emacspeak-xml-browse-mode", which is not currently defined.


In addition to any hooks its parent mode `xml-mode' might have run,
this mode runs the hook `emacspeak-xml-browse-mode-hook', as the final step
during initialization.

------------------------------------------------------------

** emacspeak-py-next-blockMove forward to the beginning of the next block.

------------------------------------------------------------

** emacspeak-py-previous-blockMove backward to the beginning of the current block.
If already at the beginning then move to previous block.

------------------------------------------------------------

** emacspeak-realaudio	Key Sequence: control e ; 

Start or control streaming audio including MP3 and
realaudio.  If using `TRPlayer' as the player, accepts
trplayer control commands if a stream is already playing.
Otherwise, the playing stream is simply stopped.  If no
stream is playing, this command prompts for a realaudio
resource.  Realaudio resources can be specified either as a
Realaudio URL, the location of a local Realaudio file, or as
the name of a local Realaudio metafile. Realaudio resources
you have played in this session are available in the
minibuffer history.  The default is to play the resource you
played most recently. Emacspeak uses the contents of the
directory specified by variable
emacspeak-realaudio-shortcuts-directory to offer a set of
completions. Hit space to use this completion list.

If using TRPlayer, you can either give one-shot commands
using command emacspeak-realaudio available from anywhere on
the audio desktop as `C-e ;'.
Alternatively, switch to buffer *realaudio* using
`C-e ;;' if you wish to issue many
navigation commands.  Note that buffer *realaudio* uses a
special major mode that provides the various navigation
commands via single keystrokes.

------------------------------------------------------------

** emacspeak-realaudio-browseBrowse RAM file before playing the selected component.

------------------------------------------------------------

** emacspeak-realaudio-modeMajor mode for streaming audio. 


key             binding
---             -------

<right>		emacspeak-aumix-wave-increase
<left>		emacspeak-aumix-wave-decrease
}		emacspeak-realaudio-trplayer-call-command
{		emacspeak-realaudio-trplayer-call-command
]		emacspeak-realaudio-trplayer-call-command
[		emacspeak-realaudio-trplayer-call-command
9		emacspeak-realaudio-trplayer-call-command
0		emacspeak-realaudio-trplayer-call-command
,		emacspeak-realaudio-trplayer-call-command
.		emacspeak-realaudio-trplayer-call-command
>		emacspeak-realaudio-trplayer-call-command
<		emacspeak-realaudio-trplayer-call-command
i		emacspeak-realaudio-trplayer-call-command
l		emacspeak-realaudio-trplayer-call-command
e		emacspeak-realaudio-trplayer-call-command
s		emacspeak-realaudio-trplayer-call-command
t		emacspeak-realaudio-trplayer-call-command
p		emacspeak-realaudio-trplayer-call-command



This mode runs the hook `emacspeak-realaudio-mode-hook', as the final step
during initialization.

------------------------------------------------------------

** emacspeak-realaudio-playPlay a realaudio stream.  Uses files from your Realaudio
shortcuts directory for completion.  See documentation for
user configurable variable
emacspeak-realaudio-shortcuts-directory. 

------------------------------------------------------------

** emacspeak-realaudio-select-realaudio-bufferSwitch to realaudio buffer.

------------------------------------------------------------

** emacspeak-realaudio-stopStop playing realaudio

------------------------------------------------------------

** emacspeak-realaudio-trplayer-call-commandCall appropriate TRPlayer command.

------------------------------------------------------------

** emacspeak-realaudio-trplayer-commandExecute TRPlayer command.

This function is advised.

Before-advice `emacspeak-auto':
Automatically defined advice to speak interactive prompts. 

------------------------------------------------------------

** emacspeak-backward-char	Key Sequence: control b   <left> 

Backward-char redefined to speak char moved to. 

------------------------------------------------------------

** emacspeak-forward-char	Key Sequence: control f   <right> 

Forward-char redefined to speak char moved to. 

------------------------------------------------------------

** emacspeak-self-insert-command	Key Sequence: Character set JISX0213-2   Character set Tibetan 2 column   Character set Indian 2 Column   Character set CNS11643-7 (Chinese traditional): ISO-IR-187   Character set CNS11643-6 (Chinese traditional): ISO-IR-186   Character set CNS11643-5 (Chinese traditional): ISO-IR-185   Character set CNS11643-4 (Chinese traditional): ISO-IR-184   Character set CNS11643-3 (Chinese traditional): ISO-IR-183   Character set Ethiopic characters   Character set Unicode subset ( cap U +0100.. cap U +24FF)   Character set Unicode subset ( cap U +E000+FFFF)   Character set Unicode subset ( cap U +2500.. cap U +33FF)   Character set Tibetan 1 column   Character set Indian glyph   Character set Indian IS 13194   Character set Arabic 2-column   Character set Lao   Character set ASCII with right-to-left direction   Character set Arabic 1-column   Character set Arabic digit   Character set VISCII upper-case   Character set VISCII lower-case   Character set IPA   Character set SiSheng (PinYin/ZhuYin)   Character set Big5 (Level-2) C940-FEFE   Character set Big5 (Level-1) A141-C67F   Character set JISX0213-1   Character set CNS11643-2 (Chinese traditional): ISO-IR-172   Character set CNS11643-1 (Chinese traditional): ISO-IR-171   Character set JISX0212 (Japanese): ISO-IR-159   Character set KSC5601 (Korean): ISO-IR-149   Character set JISX0208.1983/1990 (Japanese): ISO-IR-87   Character set GB2312: ISO-IR-58   Character set JISX0208.1978 (Japanese): ISO-IR-42   Character set RHP of Latin-8 (ISO 8859-14): ISO-IR-199   Character set RHP of Latin-9 (ISO 8859-15): ISO-IR-203   Character set RHP of Latin-5 (ISO 8859-9): ISO-IR-148   Character set RHP of Cyrillic (ISO 8859-5): ISO-IR-144   Character set Japanese Roman (JISX0201.1976)   Character set Japanese Katakana (JISX0201.1976)   Character set RHP of Hebrew (ISO 8859-8): ISO-IR-138   Character set RHP of Arabic (ISO 8859-6): ISO-IR-127   Character set RHP of Greek (ISO 8859-7): ISO-IR-126   Character set RHP of Thai (TIS620): ISO-IR-166   Character set RHP of Latin-4 (ISO 8859-4): ISO-IR-110   Character set RHP of Latin-3 (ISO 8859-3): ISO-IR-109   Character set RHP of Latin-2 (ISO 8859-2): ISO-IR-101   Character set RHP of Latin-1 (ISO 8859-1): ISO-IR-100   ~   }   |   {   z   y   x   w   v   u   t   s   r   q   p   o   n   m   l   k   j   i   h   g   f   e   d   c   b   a   `   _   ^   ]   \   [    cap Z     cap Y     cap X     cap W     cap V     cap U     cap T     cap S     cap R     cap Q     cap P     cap O     cap N     cap M     cap L     cap K     cap J     cap I     cap H     cap G     cap F     cap E     cap D     cap C     cap B     cap A    @   ?   >   =   <   ;   :   9   8   7   6   5   4   3   2   1   0   /   .   -   ,   +   *   )   (   '   &   %   $   #   "   !   SPACE 

Insert a character.
Speaks the character if emacspeak-character-echo is true.
See  command emacspeak-toggle-word-echo bound to
C-e d w.
Toggle variable dtk-stop-immediately-while-typing if you want to have
speech flush as you type.

------------------------------------------------------------

** emacspeak-remote-connect-to-server	Key Sequence: control e meta r 

Connect to and start using remote speech server running on host host
and listening on port port.  Host is the hostname of the remote
server, typically the desktop machine.  Port is the tcp port that that
host is listening on for speech requests.

------------------------------------------------------------

** emacspeak-remote-quick-connect-to-serverConnect to remote server.
Does not prompt for host or port, but quietly uses the
guesses that appear as defaults when prompting.
Use this once you are sure the guesses are usually correct.

------------------------------------------------------------

** emacspeak-remote-ssh-to-serverOpen ssh session to where we came from.

------------------------------------------------------------

** emacspeak-rmail-speak-current-message-labelsSpeak labels of current message

------------------------------------------------------------

** emacspeak-rmail-summarize-current-messageSummarize current message

------------------------------------------------------------

** emacspeak-rss-browse	Key Sequence: control e control u 

Browse specified RSS feed.

------------------------------------------------------------

** emacspeak-rss-displayRetrieve and display RSS news feed.

------------------------------------------------------------

** emacspeak-solitaire-show-columnDisplay current row auditorallly

------------------------------------------------------------

** emacspeak-solitaire-show-rowDisplay current row auditorallly

------------------------------------------------------------

** emacspeak-solitaire-speak-coordinatesSpeak coordinates of current position

------------------------------------------------------------

** emacspeak-play-all-iconsPlays all defined icons and speaks their names.

------------------------------------------------------------

** emacspeak-set-auditory-icon-player	Key Sequence: control e meta a 

Select  player used for producing auditory icons.
Recommended choices:

emacspeak-serve-auditory-icon for  the wave device.
emacspeak-play-midi-icon for midi device. 

------------------------------------------------------------

** emacspeak-sounds-reset-local-playerAsk Emacspeak to use a local audio player.
This lets me have Emacspeak switch to using audioplay on
solaris after I've used it for a while from a remote session
where it would use the more primitive speech-server based
audio player.

------------------------------------------------------------

** emacspeak-sounds-select-theme	Key Sequence: control e ) 

Select theme for auditory icons.

------------------------------------------------------------

** emacspeak-toggle-auditory-icons	Key Sequence: control e control a 

Toggle use of auditory icons.
Optional interactive PREFIX arg toggles global value.

------------------------------------------------------------

** emacspeak-audio-annotate-paragraphsSet property auditory-icon at front of all paragraphs.

------------------------------------------------------------

** emacspeak-blink-matching-openDisplay matching delimiter in the minibuffer.

------------------------------------------------------------

** emacspeak-completions-move-to-completion-groupMove to group of choices beginning with character last
typed. If no such group exists, then we dont move. 

------------------------------------------------------------

** emacspeak-dial-dtk	Key Sequence: control e d t 

Prompt for and dial a phone NUMBER with the Dectalk.

------------------------------------------------------------

** emacspeak-execute-repeatedlyExecute COMMAND repeatedly.

This function is advised.

Before-advice `emacspeak-auto':
Automatically defined advice to speak interactive prompts. 

------------------------------------------------------------

** emacspeak-mark-backward-mark	Key Sequence: <control up> 

Cycle backward through the mark ring.

------------------------------------------------------------

** emacspeak-mark-forward-mark	Key Sequence: <control down> 

Cycle forward through the mark ring.

------------------------------------------------------------

** emacspeak-owindow-next-line	Key Sequence: ESCAPE <down> 

Move to the next line in the other window and speak it.
Numeric prefix arg COUNT can specify number of lines to move.

------------------------------------------------------------

** emacspeak-owindow-previous-line	Key Sequence: ESCAPE <up> 

Move to the next line in the other window and speak it.
Numeric prefix arg COUNT specifies number of lines to move.

------------------------------------------------------------

** emacspeak-owindow-scroll-down	Key Sequence: ESCAPE <prior> 

Scroll down  the window that command `other-window' would move to.
Speak the window contents after scrolling.

------------------------------------------------------------

** emacspeak-owindow-scroll-up	Key Sequence: ESCAPE <next> 

Scroll up the window that command `other-window' would move to.
Speak the window contents after scrolling.

------------------------------------------------------------

** emacspeak-owindow-speak-line	Key Sequence: ESCAPE <select> 

Speak the current line in the other window.

------------------------------------------------------------

** emacspeak-read-next-line	Key Sequence: control e <down> 

Read next line, specified by an offset, without moving.
Default is to read the next line. 

------------------------------------------------------------

** emacspeak-read-next-wordRead next word, specified as a numeric  arg, without moving.
Default is to read the next word. 

------------------------------------------------------------

** emacspeak-read-previous-line	Key Sequence: control e <up> 

Read previous line, specified by an offset, without moving.
Default is to read the previous line. 

------------------------------------------------------------

** emacspeak-read-previous-wordRead previous word, specified as a prefix arg, without moving.
Default is to read the previous word. 

------------------------------------------------------------

** emacspeak-speak-and-skip-extent-upto-charSearch forward from point until we hit char.
Speak text between point and the char we hit.

This function is advised.

Before-advice `emacspeak-auto':
Automatically defined advice to speak interactive prompts. 

------------------------------------------------------------

** emacspeak-speak-and-skip-extent-upto-this-charSpeak extent delimited by point and last character typed.

------------------------------------------------------------

** emacspeak-speak-browse-buffer	Key Sequence: control e , 

Browse current buffer.
Default is to speak chunk having current personality.
Interactive prefix arg `browse'  repeatedly browses  through
  chunks having same personality as the current text chunk.

------------------------------------------------------------

** emacspeak-speak-buffer	Key Sequence: control e b 

Speak current buffer  contents.
With prefix ARG, speaks the rest of the buffer from point.
Negative prefix arg speaks from start of buffer to point.
 If voice lock mode is on, the paragraphs in the buffer are
voice annotated first,  see command `emacspeak-speak-voice-annotate-paragraphs'.

------------------------------------------------------------

** emacspeak-speak-buffer-filename	Key Sequence: control e f 

Speak name of file being visited in current buffer.
Speak default directory if invoked in a dired buffer,
or when the buffer is not visiting any file. 
Interactive prefix arg `filename' speaks only the final path
component.
The result is put in the kill ring for convenience.

------------------------------------------------------------

** emacspeak-speak-buffer-interactively	Key Sequence: control e  cap B  

Speak the start of, rest of, or the entire buffer.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire buffer.

------------------------------------------------------------

** emacspeak-speak-char	Key Sequence: control e c 

Speak character under point.
Pronounces character phonetically unless  called with a PREFIX arg.

------------------------------------------------------------

** emacspeak-speak-completionsSpeak completions  buffer if one present.

------------------------------------------------------------

** emacspeak-speak-continuously	Key Sequence: control e RETURN 

Speak a buffer continuously.
First prompts using the minibuffer for the kind of action to
perform after speaking each chunk.  E.G.  speak a line at a time
etc.  Speaking commences at current buffer position.  Pressing
C-g breaks out, leaving point on last chunk that
was spoken.  Any other key continues to speak the buffer.

------------------------------------------------------------

** emacspeak-speak-current-column	Key Sequence: control e = 

Speak the current column.

------------------------------------------------------------

** emacspeak-speak-current-field	Key Sequence: control e . 

Speak current field.
A field is
defined  by Emacs 21.

------------------------------------------------------------

** emacspeak-speak-current-kill	Key Sequence: control e k 

Speak the current kill entry.
This is the text that will be yanked in by the next C-y.
Prefix numeric arg, COUNT, specifies that the text that will be yanked as a
result of a
C-y  followed by count-1 M-y
be spoken.
 The kill number that is spoken says what numeric prefix arg to give
to command yank.

------------------------------------------------------------

** emacspeak-speak-current-mark	Key Sequence: control e control @ 

Speak the line containing the mark.
With no argument, speaks the
line containing the mark--this is where `exchange-point-and-mark'
C-x C-x would jump.  Numeric prefix arg 'COUNT' speaks
line containing mark 'n' where 'n' is one less than the number of
times one has to jump using `set-mark-command' to get to this marked
position.  The location of the mark is indicated by an aural highlight
achieved by a change in voice personality.

------------------------------------------------------------

** emacspeak-speak-current-percentage	Key Sequence: control e % 

Announce the percentage into the current buffer.

------------------------------------------------------------

** emacspeak-speak-current-windowSpeak contents of current window.
Speaks entire window irrespective of point.

------------------------------------------------------------

** emacspeak-speak-display-charDisplay char under point using current speech display table.
Behavior is the same as command `emacspeak-speak-char'
bound to C-e c
for characters in the range 0--127.
Optional argument PREFIX  specifies that the character should be spoken phonetically.

------------------------------------------------------------

** emacspeak-speak-front-of-bufferSpeak   the buffer from start to   point

------------------------------------------------------------

** emacspeak-speak-help	Key Sequence: control e h 

Speak help buffer if one present.
With prefix arg, speaks the rest of the buffer from point.
Negative prefix arg speaks from start of buffer to point.

------------------------------------------------------------

** emacspeak-speak-help-interactivelySpeak the start of, rest of, or the entire help.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire help.

------------------------------------------------------------

** emacspeak-speak-line	Key Sequence: control e l 

Speaks current line.  With prefix ARG, speaks the rest of the line
from point.  Negative prefix optional arg speaks from start of line to
point.  Voicifies if option `voice-lock-mode' is on.  Indicates
indentation with a tone if audio indentation is in use.  Indicates
position of point with an aural highlight if option
`emacspeak-show-point' is turned on --see command
`emacspeak-show-point' bound to M-x emacspeak-show-point.  Lines that
start hidden blocks of text, e.g.  outline header lines, or header
lines of blocks created by command `emacspeak-hide-or-expose-block'
are indicated with auditory icon ellipses.

------------------------------------------------------------

** emacspeak-speak-line-interactively	Key Sequence: control e  cap L  

Speak the start of, rest of, or the entire line.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire line.

------------------------------------------------------------

** emacspeak-speak-line-number	Key Sequence: control e control l 

Print the current buffer line number and narrowed line number of point.

------------------------------------------------------------

** emacspeak-speak-line-number-obsoleteSpeak the line number of the current line.

------------------------------------------------------------

** emacspeak-speak-line-set-column-filter	Key Sequence: control e | 

Set up filter for selectively speaking or ignoring portions of lines.
The filter is specified as a list of pairs.
For example, to filter  columns 1 -- 10 and 20 -- 25,
specify filter as 
((0 9) (20 25)). Filter settings are persisted across sessions.  A
persisted filter is used as the default when prompting for a filter.
This allows one to accumulate a set of filters for specific files like
/var/adm/messages and /var/adm/maillog over time.
Option emacspeak-speak-line-invert-filter determines 
the sense of the filter. 

------------------------------------------------------------

** emacspeak-speak-load-directory-settingsLoad a directory specific Emacspeak settings file.
This is typically used to load up settings that are specific to
an electronic book consisting of many files in the same
directory.

------------------------------------------------------------

** emacspeak-speak-message-again	Key Sequence: control e a 

Speak the last message from Emacs once again.
Optional interactive prefix arg 
`from-message-cache' speaks message cached from the most
recent call to function `message'.
The message is also placed in the kill ring for convenient yanking
if `emacspeak-speak-message-again-should-copy-to-kill-ring' is set.

------------------------------------------------------------

** emacspeak-speak-message-at-time	Key Sequence: control e @ 

Set up ring-at-time to speak message at specified time.
Provides simple stop watch functionality in addition to other things.
See documentation for command run-at-time for details on time-spec.

------------------------------------------------------------

** emacspeak-speak-minibufferSpeak the minibuffer contents
 With prefix arg, speaks the rest of the buffer from point.
Negative prefix arg speaks from start of buffer to point.

------------------------------------------------------------

** emacspeak-speak-minor-mode-line	Key Sequence: control e  cap M  

Speak the minor mode-information.

------------------------------------------------------------

** emacspeak-speak-mode-line	Key Sequence: control e m 

Speak the mode-line.

------------------------------------------------------------

** emacspeak-speak-next-field	Key Sequence: control e > 

Skip across and speak the next contiguous sequence of non-blank characters.
Useful in moving across fields.
Will be improved if it proves useful.

------------------------------------------------------------

** emacspeak-speak-next-personality-chunkMoves to the front of next chunk having current personality.
Speak that chunk after moving.

------------------------------------------------------------

** emacspeak-speak-next-window	Key Sequence: control e control n 

Speak the next window.

------------------------------------------------------------

** emacspeak-speak-other-buffer	Key Sequence: control e meta b 

Speak specified buffer.
Useful to listen to a buffer while in a different context.

------------------------------------------------------------

** emacspeak-speak-other-windowSpeak contents of `other' window.
Speaks entire window irrespective of point.
Semantics  of `other' is the same as for the builtin Emacs command
`other-window'.
Optional argument ARG  specifies `other' window to speak.

------------------------------------------------------------

** emacspeak-speak-page	Key Sequence: control e [ 

Speak a page.
With prefix ARG, speaks rest of current page.
Negative prefix arg will read from start of current page to point.
If option  `voice-lock-mode' is on, then it will use any defined personality.

------------------------------------------------------------

** emacspeak-speak-page-interactively	Key Sequence: control e ] 

Speak the start of, rest of, or the entire page.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire page.

------------------------------------------------------------

** emacspeak-speak-paragraph	Key Sequence: control e { 

Speak paragraph.
With prefix arg, speaks rest of current paragraph.
Negative prefix arg will read from start of current paragraph to point.
If voice-lock-mode is on, then it will use any defined personality. 

------------------------------------------------------------

** emacspeak-speak-paragraph-interactively	Key Sequence: control e  cap P  

Speak the start of, rest of, or the entire paragraph.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire paragraph.

------------------------------------------------------------

** emacspeak-speak-predefined-window	Key Sequence: control e 9   control e 8   control e 7   control e 6   control e 5   control e 4   control e 3   control e 2   control e 1   control e 0 

Speak one of the first 10 windows on the screen.
Speaks entire window irrespective of point.
In general, you'll never have Emacs split the screen into more than
two or three.
Argument ARG determines the 'other' window to speak.
Semantics  of `other' is the same as for the builtin Emacs command
`other-window'.

------------------------------------------------------------

** emacspeak-speak-previous-field	Key Sequence: control e < 

Skip backwards across and speak  contiguous sequence of non-blank characters.
Useful in moving across fields.
Will be improved if it proves useful.

------------------------------------------------------------

** emacspeak-speak-previous-personality-chunkMoves to the front of previous chunk having current personality.
Speak that chunk after moving.

------------------------------------------------------------

** emacspeak-speak-previous-window	Key Sequence: control e control p 

Speak the previous window.

------------------------------------------------------------

** emacspeak-speak-rectangle	Key Sequence: control e  cap R  

Speak a rectangle of text.
Rectangle is delimited by point and mark.
When call from a program,
arguments specify the START and END of the rectangle.

------------------------------------------------------------

** emacspeak-speak-region	Key Sequence: control e r 

Speak region.
Argument START  and END specify region to speak.

------------------------------------------------------------

** emacspeak-speak-rest-of-buffer	Key Sequence: control e n 

Speak remainder of the buffer starting at point

------------------------------------------------------------

** emacspeak-speak-sentenceSpeak current sentence.
With prefix ARG, speaks the rest of the sentence  from point.
Negative prefix arg speaks from start of sentence to point.

------------------------------------------------------------

** emacspeak-speak-set-display-tableSets up buffer specific speech display table that controls how
special characters are spoken. Interactive prefix argument causes
setting to be global.

------------------------------------------------------------

** emacspeak-speak-sexp	Key Sequence: control e ' 

Speak current sexp.
With prefix ARG, speaks the rest of the sexp  from point.
Negative prefix arg speaks from start of sexp to point.
If option  `voice-lock-mode' is on, then uses the personality.

------------------------------------------------------------

** emacspeak-speak-sexp-interactively	Key Sequence: control e " 

Speak the start of, rest of, or the entire sexp.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire sexp.

------------------------------------------------------------

** emacspeak-speak-skim-bufferSkim the current buffer  a paragraph at a time.

------------------------------------------------------------

** emacspeak-speak-skim-next-paragraphSkim next paragraph.

------------------------------------------------------------

** emacspeak-speak-skim-paragraphSkim paragraph.
Skimming a paragraph results in the speech speeding up after
the first clause.
Speech is scaled by the value of dtk-speak-skim-scale

------------------------------------------------------------

** emacspeak-speak-spaces-at-point	Key Sequence: control e CONTROL meta @ 

Speak the white space at point.

------------------------------------------------------------

** emacspeak-speak-spell-current-wordSpell word at  point.

------------------------------------------------------------

** emacspeak-speak-this-personality-chunkSpeak chunk of text around point that has current
personality.

------------------------------------------------------------

** emacspeak-speak-time	Key Sequence: control e t 

Speak the time.
Optional interactive prefix arg `C-u'invokes world clock.
Timezone is specified using minibuffer completion.
Second interactive prefix sets clock to new timezone.

------------------------------------------------------------

** emacspeak-speak-version	Key Sequence: control e  cap V  

Announce version information for running emacspeak.

------------------------------------------------------------

** emacspeak-speak-voice-annotate-paragraphsLocate paragraphs and voice annotate the first word.
Here, paragraph is taken to mean a chunk of text preceded by a blank line.
Useful to do this before you listen to an entire buffer.

------------------------------------------------------------

** emacspeak-speak-window-information	Key Sequence: control e control w 

Speaks information about current window.

------------------------------------------------------------

** emacspeak-speak-word	Key Sequence: control e w 

Speak current word.
With prefix ARG, speaks the rest of the word from point.
Negative prefix arg speaks from start of word to point.
If executed  on the same buffer position a second time, the word is
spelt instead of being spoken.

------------------------------------------------------------

** emacspeak-speak-word-interactivelySpeak the start of, rest of, or the entire word.
's' to speak the start.
'r' to speak the rest.
any other key to speak entire word.

------------------------------------------------------------

** emacspeak-speak-world-clockDisplay current date and time  for specified zone.
Optional second arg `set' sets the TZ environment variable as well.

------------------------------------------------------------

** emacspeak-switch-to-completions-windowJump to the *Completions* buffer if it is active.
We make the current minibuffer contents (which is obviously the
prefix for each entry in the completions buffer) inaudible
to reduce chatter.

------------------------------------------------------------

** emacspeak-toggle-action-modeToggle state of  Emacspeak  action mode.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.

------------------------------------------------------------

** emacspeak-toggle-audio-indentation	Key Sequence: control e d i 

Toggle state of  Emacspeak  audio indentation.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
Specifying the method of indentation as `tones'
results in the Dectalk producing a tone whose length is a function of the
line's indentation.  Specifying `speak'
results in the number of initial spaces being spoken.

------------------------------------------------------------

** emacspeak-toggle-character-echo	Key Sequence: control e d k 

Toggle state of  Emacspeak  character echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.

------------------------------------------------------------

** emacspeak-toggle-comint-autospeak	Key Sequence: control e control q 

Toggle state of Emacspeak comint autospeak.
When turned on, comint output is automatically spoken.  Turn this on if
you want your shell to speak its results.  Interactive
PREFIX arg means toggle the global default value, and then
set the current local value to the result.

------------------------------------------------------------

** emacspeak-toggle-line-echo	Key Sequence: control e d l 

Toggle state of  Emacspeak  line echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.

------------------------------------------------------------

** emacspeak-toggle-mail-alert	Key Sequence: control e meta m 

Toggle state of  Emacspeak  mail alert.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
Turning on this option results in Emacspeak producing an auditory icon
indicating the arrival  of new mail when displaying the mode line.

------------------------------------------------------------

** emacspeak-toggle-show-point	Key Sequence: control e control d 

Toggle state of  Emacspeak-show-point.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.

------------------------------------------------------------

** emacspeak-toggle-speak-line-invert-filter	Key Sequence: control e \ 

Toggle state of   how column filter is interpreted.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.

------------------------------------------------------------

** emacspeak-toggle-speak-messages	Key Sequence: control e q 

Toggle the state of whether emacspeak echoes messages.

------------------------------------------------------------

** emacspeak-toggle-which-function	Key Sequence: control e meta w 

Toggle state of  Emacspeak  which function mode.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.

------------------------------------------------------------

** emacspeak-toggle-word-echo	Key Sequence: control e d w 

Toggle state of  Emacspeak  word echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.

------------------------------------------------------------

** emacspeak-use-customized-blink-parenA customized blink-paren to speak  matching opening paren.
We need to call this in case Emacs
is anal and loads its own builtin blink-paren function
which does not talk.

------------------------------------------------------------

** emacspeak-view-register	Key Sequence: control e v 

Display the contents of a register, and then speak it.

------------------------------------------------------------

** emacspeak-voicify-rectangleVoicify the current rectangle.
When calling from a program,arguments are
START END personality
Prompts for PERSONALITY  with completion when called interactively.

------------------------------------------------------------

** emacspeak-voicify-regionVoicify the current region.
When calling from a program,arguments are
START END personality.
Prompts for PERSONALITY  with completion when called interactively.

------------------------------------------------------------

** emacspeak-zap-tts	Key Sequence: control e d z 

Send this command to the TTS directly.

------------------------------------------------------------

** emacspeak-speedbar-clickDoes the equivalent of the mouse click from the keyboard

------------------------------------------------------------

** emacspeak-speedbar-goto-speedbarSwitch to the speedbar

------------------------------------------------------------

** emacspeak-table-copy-current-element-to-registerSpeak current table element

This function is advised.

Before-advice `emacspeak-auto':
Automatically defined advice to speak interactive prompts. 

------------------------------------------------------------

** emacspeak-table-copy-to-clipboardCopy table in current buffer to the table clipboard.
Current buffer must be in emacspeak-table mode.

------------------------------------------------------------

** emacspeak-table-display-table-in-region	Key Sequence: control e TAB 

Recognize tabular data in current region and display it in table
browsing mode in a a separate buffer.
emacspeak table mode is designed to let you browse tabular data using
all the power of the two-dimensional spatial layout while giving you
sufficient contextual information.  The tables subdirectory of the
emacspeak distribution contains some sample tables --these are the
CalTrain schedules.  Execute command `describe-mode' bound to
C-h m in a buffer that is in emacspeak table mode to read
the documentation on the table browser.

------------------------------------------------------------

** emacspeak-table-find-csv-fileProcess a csv (comma separated values) file. 
The processed  data and presented using emacspeak table navigation. 

------------------------------------------------------------

** emacspeak-table-find-file	Key Sequence: control e control t 

Open a file containing table data and display it in table mode.
emacspeak table mode is designed to let you browse tabular data using
all the power of the two-dimensional spatial layout while giving you
sufficient contextual information.  The etc/tables subdirectory of the
emacspeak distribution contains some sample tables --these are the
CalTrain schedules.  Execute command `describe-mode' bound to
C-h m in a buffer that is in emacspeak table mode to read
the documentation on the table browser.

------------------------------------------------------------

** emacspeak-table-get-entry-with-headersReturn   both row and column header and table element

------------------------------------------------------------

** emacspeak-table-gotoPrompt for a table cell coordinates and jump to it.

------------------------------------------------------------

** emacspeak-table-goto-bottomGoes to the bottom of the current column.

------------------------------------------------------------

** emacspeak-table-goto-leftGoes to the left of the current row.

------------------------------------------------------------

** emacspeak-table-goto-rightGoes to the right of the current row.

------------------------------------------------------------

** emacspeak-table-goto-topGoes to the top of the current column.

------------------------------------------------------------

** emacspeak-table-next-columnMove to the next column if possible

------------------------------------------------------------

** emacspeak-table-next-rowMove to the next row if possible

------------------------------------------------------------

** emacspeak-table-paste-from-clipboardPaste the emacspeak table clipboard into the current buffer.
Use the major  mode of this buffer to  decide what kind of table
markup to use.

------------------------------------------------------------

** emacspeak-table-previous-columnMove to the previous column  if possible

------------------------------------------------------------

** emacspeak-table-previous-rowMove to the previous row if possible

------------------------------------------------------------

** emacspeak-table-searchSearch the table for matching elements.  Interactively prompts for
row or column to search and pattern to look for.    If there is a match, makes
the matching cell current.

------------------------------------------------------------

** emacspeak-table-search-headersSearch the table row or column headers.  Interactively prompts for
row or column to search and pattern to look for.  If there is a
match, makes the matching row or column current.

------------------------------------------------------------

** emacspeak-table-select-automatic-speaking-methodInteractively select the kind of automatic speech to produce when
browsing table elements

------------------------------------------------------------

** emacspeak-table-sort-on-current-columnSort table on current column. 

------------------------------------------------------------

** emacspeak-table-speak-both-headers-and-elementSpeak  both row and column header and table element

------------------------------------------------------------

** emacspeak-table-speak-column-filteredSpeaks a table column after applying a specified column filter.
Optional prefix arg prompts for a new filter.

------------------------------------------------------------

** emacspeak-table-speak-column-header-and-elementSpeak  column header and table element

------------------------------------------------------------

** emacspeak-table-speak-coordinatesSpeak current table coordinates.

------------------------------------------------------------

** emacspeak-table-speak-current-elementSpeak current table element

------------------------------------------------------------

** emacspeak-table-speak-dimensionsSpeak current table dimensions.

------------------------------------------------------------

** emacspeak-table-speak-row-filteredSpeaks a table row after applying a specified row filter.
Optional prefix arg prompts for a new filter.

------------------------------------------------------------

** emacspeak-table-speak-row-header-and-elementSpeak  row header and table element

------------------------------------------------------------

** emacspeak-table-ui-filter-loadLoad saved filter settings.

------------------------------------------------------------

** emacspeak-table-ui-filter-saveSave out filter settings.

------------------------------------------------------------

** emacspeak-table-view-csv-bufferProcess a csv (comma separated values) data. 
The processed  data and presented using emacspeak table
navigation. 

------------------------------------------------------------

** emacspeak-tabulate-region	Key Sequence: control e i 

Voicifies the white-space of a table if one found.  Optional interactive prefix
arg mark-fields specifies if the header row information is used to mark fields
in the white-space.

------------------------------------------------------------

** emacspeak-tapestry-describe-tapestry	Key Sequence: control e meta t 

Describe the current layout of visible buffers in current frame.
Use interactive prefix arg to get coordinate positions of the
displayed buffers.

------------------------------------------------------------

** emacspeak-tapestry-select-window-by-name	Key Sequence: control e  cap W  

Select window by the name of the buffer it displays.
This is useful when using modes like ECB or the new GDB UI where
  you want to preserve the window layout 
but quickly switch to a window by name.

------------------------------------------------------------

** emacspeak-tar-speak-file-dateSpeak date of file current entry 

------------------------------------------------------------

** emacspeak-tar-speak-file-permissionsSpeak permissions of file current entry 

------------------------------------------------------------

** emacspeak-tar-speak-file-sizeSpeak size of file current entry 

------------------------------------------------------------

** emacspeak-tetris-goto-bottom-rowMove to and speak bottom row

------------------------------------------------------------

** emacspeak-tetris-goto-top-rowMove to and speak the top row

------------------------------------------------------------

** emacspeak-tetris-speak-columnSpeak  column --default is to speak current column

------------------------------------------------------------

** emacspeak-tetris-speak-coordinatesSpeak current position

------------------------------------------------------------

** emacspeak-tetris-speak-current-shapeSpeak current shape

------------------------------------------------------------

** emacspeak-tetris-speak-current-shape-and-coordinatesSpeak shape orientation and coordinates

------------------------------------------------------------

** emacspeak-tetris-speak-next-shapeSpeak next shape

------------------------------------------------------------

** emacspeak-tetris-speak-rowSpeak current tetris row

------------------------------------------------------------

** emacspeak-tetris-speak-row-numberSpeak where on the tetris board we are

------------------------------------------------------------

** emacspeak-tetris-speak-scoreSpeak the score

------------------------------------------------------------

** emacspeak-tetris-speak-x-coordinateSpeak current position

------------------------------------------------------------

** emacspeak-tnt-toggle-autospeakToggle TNT autospeak for this chat session.

------------------------------------------------------------

** emacspeak-url-template-fetch	Key Sequence: control e u 

Fetch a pre-defined resource.
Use Emacs completion to obtain a list of available resources.
Resources typically prompt for the relevant information
before completing the request.
Optional interactive prefix arg displays documentation for specified resource.

------------------------------------------------------------

** emacspeak-url-template-helpDisplay documentation for  a URL template.
Use Emacs completion to obtain a list of available
resources.

------------------------------------------------------------

** emacspeak-url-template-loadLoad URL template resources from specified location.

------------------------------------------------------------

** emacspeak-url-template-saveSave out url templates.

------------------------------------------------------------

** emacspeak-view-line-to-topMoves current line to top of window

------------------------------------------------------------

** emacspeak-view-process-goto-current-field-next-lineSet point to the current field in the next line.

------------------------------------------------------------

** emacspeak-view-process-speak-current-fieldSpeak current field

------------------------------------------------------------

** emacspeak-vm-browse-messageBrowse an email message --read it paragraph at a time. 

------------------------------------------------------------

** emacspeak-vm-catch-up-all-messagesMark all messages in folder to be deleted. Use with caution.

------------------------------------------------------------

** emacspeak-vm-locate-subject-lineLocates the subject line in a message being read.
Useful when you're reading a message
that has been forwarded multiple times.

------------------------------------------------------------

** emacspeak-vm-mode-lineVM mode line information. 

------------------------------------------------------------

** emacspeak-vm-next-buttonMove point to N buttons forward.
If N is negative, move backward instead.

------------------------------------------------------------

** emacspeak-vm-speak-labelsSpeak a message's labels

------------------------------------------------------------

** emacspeak-vm-yank-headerYank specified header into kill ring.

------------------------------------------------------------

** emacspeak-w3-browse-rss-at-pointBrowses RSS url under point.

------------------------------------------------------------

** emacspeak-w3-browse-url-with-styleBrowse URL with specified XSL style.

------------------------------------------------------------

** emacspeak-w3-browse-xmlBrowse XML+CSS using W3.
XML files can be rendered by an XML browser that is CSS aware.
Emacs/W3 is not quite a complete XML+CSS browser, but it  does a
good enough job for many things, especially the XML files from
bookshare.org.
Setting W3 up at present to display any and all XML files at
present would be a bug, since W3 is an HTML browser --not a true
XML browser.
This command opens a specified XML file under the covers and has
W3 render it using CSS as available. The result on bookshare.org
XML files is quite usable:

0) You get Aural CSS support.

1) You get a navigable buffer using imenu if you have w3-imenu
loaded.


------------------------------------------------------------

** emacspeak-w3-browse-xml-url-with-styleBrowse XML URL with specified XSL style.

------------------------------------------------------------

** emacspeak-w3-class-filter-and-followFollow url and point, and filter the result by specified class.
Class can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.

------------------------------------------------------------

** emacspeak-w3-count-matchesCount matches for locator  in HTML.

------------------------------------------------------------

** emacspeak-w3-count-nested-tablesCount nested tables in HTML.

------------------------------------------------------------

** emacspeak-w3-count-tablesCount  tables in HTML.

------------------------------------------------------------

** emacspeak-w3-customize-base-uri-pronunciationDefines custom buffer local pronunciation for base URI.

------------------------------------------------------------

** emacspeak-w3-do-onclickDo  onclick action.

------------------------------------------------------------

** emacspeak-w3-extract-by-classExtract elements having specified class attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer. Optional arg url specifies the page to extract content from.
Interactive use provides list of class values as completion.

------------------------------------------------------------

** emacspeak-w3-extract-by-class-listExtract elements having class specified in list `classes' from HTML.
Extracts specified elements from current WWW page and displays it in a
separate buffer. Optional arg url specifies the page to extract
content from. Interactive use provides list of class values as
completion. 

------------------------------------------------------------

** emacspeak-w3-extract-matching-urlsExtracts links whose URL matches pattern.

------------------------------------------------------------

** emacspeak-w3-extract-media-streamsExtract links to media streams.
operate on current web page when in a W3 buffer; otherwise prompt for url.
`prompt-url' is the URL to process. Prompts for URL when called
interactively. Optional arg `speak' specifies if the result should be
spoken automatically.

------------------------------------------------------------

** emacspeak-w3-extract-nested-tableExtract nested table specified by `table-index'. Default is to
operate on current web page when in a W3 buffer; otherwise
`prompt-url' is the URL to process. Prompts for URL when called
interactively. Optional arg `speak' specifies if the result should be
spoken automatically.

------------------------------------------------------------

** emacspeak-w3-extract-nested-table-listExtract specified list of tables from a WWW page.

------------------------------------------------------------

** emacspeak-w3-extract-node-by-idExtract specified node from URI.

------------------------------------------------------------

** emacspeak-w3-extract-table-by-matchExtract table containing  specified match.
 Optional arg url specifies the page to extract content from.
Interactive prefix arg causes url to be read from the minibuffer.

------------------------------------------------------------

** emacspeak-w3-extract-table-by-positionExtract table at specified position.
 Optional arg url specifies the page to extract content from.
Interactive prefix arg causes url to be read from the minibuffer.

------------------------------------------------------------

** emacspeak-w3-extract-tables-by-match-listExtract specified  tables from a WWW page.
Tables are specified by containing  match pattern 
 found in the match list.

------------------------------------------------------------

** emacspeak-w3-extract-tables-by-position-listExtract specified list of nested tables from a WWW page.
Tables are specified by their position in the list 
nested of tables found in the page.

------------------------------------------------------------

** emacspeak-w3-google-extract-from-cacheExtract current  page from the Google cache.

------------------------------------------------------------

** emacspeak-w3-google-on-this-sitePerform a google search restricted to the current WWW site.

------------------------------------------------------------

** emacspeak-w3-google-similar-to-this-pageAsk Google to find documents similar to this one.

------------------------------------------------------------

** emacspeak-w3-google-who-links-to-this-pagePerform a google search to locate documents that link to the
current page.

------------------------------------------------------------

** emacspeak-w3-javascript-follow-linkFollow URL hidden inside a javascript link

------------------------------------------------------------

** emacspeak-w3-jump-to-submitJump to next available submit button.

------------------------------------------------------------

** emacspeak-w3-jump-to-title-in-contentJumps to the occurrence of document title in page body.

------------------------------------------------------------

** emacspeak-w3-junk-by-class-listJunk elements having class specified in list `classes' from HTML.
Extracts specified elements from current WWW page and displays it in a
separate buffer. Optional arg url specifies the page to extract
content from. Interactive use provides list of class values as
completion. 

------------------------------------------------------------

** emacspeak-w3-lynx-url-under-pointDisplay contents of URL under point using LYNX.  The
document is displayed in a separate buffer. Note that the
hyperlinks in that display are not active-- this facility is
present only to help me iron out the remaining problems with
the table structure extraction code in W3.

------------------------------------------------------------

** emacspeak-w3-next-doc-elementMove forward  to the next document element.
Optional interactive prefix argument COUNT 
specifies by how many eleemnts to move.

------------------------------------------------------------

** emacspeak-w3-preview-this-bufferPreview this buffer.

------------------------------------------------------------

** emacspeak-w3-preview-this-regionPreview this region.

------------------------------------------------------------

** emacspeak-w3-previous-doc-elementMove back  to the previous document element.
Optional interactive prefix argument COUNT 
specifies by how many eleemnts to move.

------------------------------------------------------------

** emacspeak-w3-realaudio-play-url-at-pointPlay url under point as realaudio

------------------------------------------------------------

** emacspeak-w3-set-xsl-keep-resultSet value of `emacspeak-w3-xsl-keep-result'.

------------------------------------------------------------

** emacspeak-w3-show-anchor-classDisplay any class attributes set on corresponding anchor
element. 

------------------------------------------------------------

** emacspeak-w3-speak-next-elementSpeak next document element.

------------------------------------------------------------

** emacspeak-w3-speak-this-elementSpeak document element under point.

------------------------------------------------------------

** emacspeak-w3-toggle-table-bordersToggle drawing of W3 table borders

------------------------------------------------------------

** emacspeak-w3-url-rewrite-and-followApply a url rewrite rule as specified in the current buffer
before following link under point.  If no rewrite rule is
defined, first prompt for one.  Rewrite rules are of the
form `(from to)' where from and to are strings.  Typically,
the rewrite rule is automatically set up by Emacspeak tools
like websearch where a rewrite rule is known.  Rewrite rules
are useful in jumping directly to the printer friendly
version of an article for example.
Optional interactive prefix arg  prompts for a rewrite rule
even if one is already defined.

------------------------------------------------------------

** emacspeak-w3-xpath-filter-and-followFollow url and point, and filter the result by specified xpath.
XPath can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.

------------------------------------------------------------

** emacspeak-w3-xpath-junk-and-followFollow url and point, and filter the result by junking
elements specified xpath.
XPath can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.

------------------------------------------------------------

** emacspeak-w3-xsl-toggleToggle  application of XSL transformations.
This uses XSLT Processor xsltproc available as part of the
libxslt package.

------------------------------------------------------------

** emacspeak-w3-xslt-applyApply specified transformation to current page.

------------------------------------------------------------

** emacspeak-w3-xslt-filterExtract elements matching specified XPath path locator
from HTML.  Extracts specified elements from current WWW
page and displays it in a separate buffer.  Optional arg url
specifies the page to extract table from.
Optional arg COMPLEMENT inverts the filter.  

------------------------------------------------------------

** emacspeak-w3-xslt-junkJunk elements matching specified locator.

------------------------------------------------------------

** emacspeak-w3-xslt-selectSelect XSL transformation applied to WWW pages before they are displayed .

------------------------------------------------------------

** emacspeak-websearch-ibm-internalSearch IBM using trevi

------------------------------------------------------------

** emacspeak-websearch-alltheweb-searchPerform an AllTheWeb  search.

------------------------------------------------------------

** emacspeak-websearch-altavista-searchPerform an Altavista search

------------------------------------------------------------

** emacspeak-websearch-amazon-searchAmazon search.

------------------------------------------------------------

** emacspeak-websearch-ask-jeevesAsk Jeeves for the answer.

------------------------------------------------------------

** emacspeak-websearch-bbc-searchSearch BBC archives.

------------------------------------------------------------

** emacspeak-websearch-biblio-searchSearch Computer Science Bibliographies.

------------------------------------------------------------

** emacspeak-websearch-britannica-searchSearch Encyclopedia Britannica.

------------------------------------------------------------

** emacspeak-websearch-citeseer-searchPerform a CiteSeer search. 

------------------------------------------------------------

** emacspeak-websearch-company-newsPerform an company news lookup.
Retrieves company news, research, profile, insider trades,  or upgrades/downgrades.

------------------------------------------------------------

** emacspeak-websearch-cpan-searchSearch CPAN  Comprehensive Perl Archive Network   Site. 

------------------------------------------------------------

** emacspeak-websearch-ctan-searchSearch CTAN Comprehensive TeX Archive Network   Site. 

------------------------------------------------------------

** emacspeak-websearch-dictionary-hypertext-webster-searchSearch the Webster Dictionary.

------------------------------------------------------------

** emacspeak-websearch-dispatch	Key Sequence: control e ? 

Launches specific websearch queries.
Press `?' to list available search engines.
Once selected, the selected searcher prompts for additional information as appropriate.
When using W3,  this interface attempts to speak the most relevant information on the result page.

------------------------------------------------------------

** emacspeak-websearch-display-formDisplay form specified by form-markup.

------------------------------------------------------------

** emacspeak-websearch-ebay-searchEbay search.

------------------------------------------------------------

** emacspeak-websearch-exchange-rate-convertorCurrency convertor.

------------------------------------------------------------

** emacspeak-websearch-foldoc-searchPerform a FolDoc search. 

------------------------------------------------------------

** emacspeak-websearch-freshmeat-searchSearch Freshmeat  Site. 

------------------------------------------------------------

** emacspeak-websearch-frooglePerform a Froogle search.

------------------------------------------------------------

** emacspeak-websearch-googlePerform an Google search.
Optional interactive prefix arg `lucky' is equivalent to hitting the 
I'm Feeling Lucky button on Google.
Meaning of the `lucky' flag can be inverted by setting option emacspeak-websearch-google-feeling-lucky-p.

------------------------------------------------------------

** emacspeak-websearch-google-advancedPresent Google advanced search form simplified for speech interaction.

------------------------------------------------------------

** emacspeak-websearch-google-feeling-luckyDo a I'm Feeling Lucky Google search.

------------------------------------------------------------

** emacspeak-websearch-google-search-in-date-rangeUse this from inside the calendar to do Google date-range searches.

------------------------------------------------------------

** emacspeak-websearch-google-usenet-advancedPresent Google Usenet advanced search form simplified for speech interaction.

------------------------------------------------------------

** emacspeak-websearch-gutenbergPerform an Gutenberg search

------------------------------------------------------------

** emacspeak-websearch-helpDisplays key mapping used by Emacspeak Websearch.

------------------------------------------------------------

** emacspeak-websearch-map-directions-searchGet driving directions from Yahoo.
With optional interactive prefix arg MAP shows the location map instead.

------------------------------------------------------------

** emacspeak-websearch-merriam-webster-searchSearch the Merriam Webster Dictionary.

------------------------------------------------------------

** emacspeak-websearch-my-rss-searchMy RSS search.

------------------------------------------------------------

** emacspeak-websearch-news-yahooPerform an Yahoo News search

------------------------------------------------------------

** emacspeak-websearch-northern-lightPerform a Northern Light  search

------------------------------------------------------------

** emacspeak-websearch-open-directory-searchPerform an Open Directory search

------------------------------------------------------------

** emacspeak-websearch-people-yahooPerform an Yahoo  people search

------------------------------------------------------------

** emacspeak-websearch-quotes-yahoo-searchPerform a Quotes Yahoo .  
Default tickers to look up is taken from variable
emacspeak-websearch-personal-portfolio.
Default is to present the data in emacspeak's table browsing
mode --optional interactive prefix arg
causes data to be displayed y W3 as a WWW page.
You can customize the defaults by setting variable
emacspeak-websearch-quotes-yahoo-options to an appropriate string.

------------------------------------------------------------

** emacspeak-websearch-recorded-books-searchPresent advanced search form for recorded books.

------------------------------------------------------------

** emacspeak-websearch-rpm-findSearch RPM  catalog  site.

------------------------------------------------------------

** emacspeak-websearch-shoutcast-searchShoutcast search.

------------------------------------------------------------

** emacspeak-websearch-software-searchSearch SourceForge, Freshmeat and other sites. 

------------------------------------------------------------

** emacspeak-websearch-sourceforge-searchSearch SourceForge Site. 

------------------------------------------------------------

** emacspeak-websearch-teomaPerform an Teoma  search.

------------------------------------------------------------

** emacspeak-websearch-usenet	Key Sequence: control e  cap U  

Prompt and browse a Usenet newsgroup.
Optional interactive prefix arg results in prompting for a search term.

------------------------------------------------------------

** emacspeak-websearch-usenet-searchSearch a Usenet newsgroup.

------------------------------------------------------------

** emacspeak-websearch-w3c-searchSearch the W3C Site.

------------------------------------------------------------

** emacspeak-websearch-weatherGet weather forecast for specified zip code.

------------------------------------------------------------

** emacspeak-websearch-yahooPerform an Yahoo  search

------------------------------------------------------------

** emacspeak-websearch-yahoo-historical-chartLook up historical stock data.
Optional second arg as-html processes the results as HTML rather than data.

------------------------------------------------------------

** emacspeak-widget-browse-widget-interactivelyAllows you to browse a widget

------------------------------------------------------------

** emacspeak-widget-helpSpeak help for widget under point.

------------------------------------------------------------

** emacspeak-widget-summarize-parentSummarize parent of widget at point.

------------------------------------------------------------

** emacspeak-widget-summarize-widget-under-pointSummarize a widget if any under point.
Optional interactive prefix specifies how many levels to go up from current
widget before summarizing.

------------------------------------------------------------

** emacspeak-widget-update-from-minibufferSets widget at point by invoking its prompter.

------------------------------------------------------------

** emacspeak-annotate-add-annotationAdd annotation to the annotation working buffer.
Prompt for annotation buffer if not already set.
Interactive prefix arg `reset' prompts for the annotation
buffer even if one is already set.
Annotation is entered in a temporary buffer and the
annotation is inserted into the working buffer when complete.

------------------------------------------------------------

** emacspeak-clipboard-copy	Key Sequence: control e control c 

Copy contents of the region to the emacspeak clipboard.
Previous contents of the clipboard will be overwritten.  The Emacspeak
clipboard is a convenient way of sharing information between
independent Emacspeak sessions running on the same or different
machines.  Do not use this for sharing information within an Emacs
session --Emacs' register commands are far more efficient and
light-weight.  Optional interactive prefix arg results in Emacspeak
prompting for the clipboard file to use.
Argument START and END specifies  region.
Optional argument PROMPT  specifies whether we prompt for the name of a clipboard file.

------------------------------------------------------------

** emacspeak-clipboard-paste	Key Sequence: control e control y 

Yank contents of the Emacspeak clipboard at point.
The Emacspeak clipboard is a convenient way of sharing information between
independent Emacspeak sessions running on the same or different
machines.  Do not use this for sharing information within an Emacs
session --Emacs' register commands are far more efficient and
light-weight.  Optional interactive prefix arg pastes from
the emacspeak table clipboard instead.

------------------------------------------------------------

** emacspeak-copy-current-file	Key Sequence: control e meta c 

Copy file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when copying.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Asks for confirmation if the copy will result in an
  existing file being overwritten.

------------------------------------------------------------

** emacspeak-customize	Key Sequence: control e  cap C  

Customize Emacspeak.

------------------------------------------------------------

** emacspeak-customize-personal-settingsCreate a customization buffer for browsing and updating
personal customizations.

------------------------------------------------------------

** emacspeak-cvs-get-anonymous	Key Sequence: control e <control down> 

Get latest cvs snapshot of emacspeak.

------------------------------------------------------------

** emacspeak-cvs-gnu-get-project-snapshotGrab CVS snapshot  of specified project from GNU.

------------------------------------------------------------

** emacspeak-cvs-sf-get-project-snapshotGrab CVS snapshot  of specified project from Sourceforge.

------------------------------------------------------------

** emacspeak-emergency-tts-restartFor use in an emergency.
Will start TTS engine specified by 
emacspeak-emergency-tts-server.

------------------------------------------------------------

** emacspeak-frame-label-or-switch-to-labelled-frame	Key Sequence: control e meta f 

Switch to labelled frame.
With optional PREFIX argument, label current frame.

------------------------------------------------------------

** emacspeak-frame-read-frame-labelRead a frame label with completion.

------------------------------------------------------------

** emacspeak-generate-documentationGenerate docs for all emacspeak commands.
Prompts for FILENAME in which to save the documentation.
Warning! Contents of file filename will be overwritten.

------------------------------------------------------------

** emacspeak-generate-texinfo-command-documentationGenerate texinfo documentation  for all emacspeak
commands  into file commands.texi.
Warning! Contents of file commands.texi will be overwritten.

------------------------------------------------------------

** emacspeak-generate-texinfo-option-documentationGenerate texinfo documentation  for all emacspeak
options  into file filename.
Warning! Contents of file filename will be overwritten.

------------------------------------------------------------

** emacspeak-kill-buffer-quietlyKill current buffer without asking for confirmation.

------------------------------------------------------------

** emacspeak-learn-mode	Key Sequence: control e control h 

Helps you learn the keys.  You can press keys and hear what they do.
To leave, press C-g.

------------------------------------------------------------

** emacspeak-link-current-file	Key Sequence: control e meta l 

Link (hard link) file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when linking.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Signals an error if target already exists.

------------------------------------------------------------

** emacspeak-linksLaunch links on  specified URL in a new terminal.

------------------------------------------------------------

** emacspeak-lynxLaunch lynx on  specified URL in a new terminal.

------------------------------------------------------------

** emacspeak-next-frame-or-buffer	Key Sequence: <control right> 

Move to next buffer.
With optional interactive prefix arg `frame', move to next frame instead.

------------------------------------------------------------

** emacspeak-previous-frame-or-buffer	Key Sequence: <control left> 

Move to previous buffer.
With optional interactive prefix arg `frame', move to previous frame instead.

------------------------------------------------------------

** emacspeak-root	Key Sequence: control e control r 

Start a root shell or switch to one that already exists.
Optional interactive prefix arg `cd' executes cd
default-directory after switching.

------------------------------------------------------------

** emacspeak-select-this-buffer-next-display	Key Sequence: control e <control right> 

Select this buffer as displayed in a `next' frame.
See documentation for command
`emacspeak-select-this-buffer-other-window-display' for the
meaning of `next'.

------------------------------------------------------------

** emacspeak-select-this-buffer-other-window-displaySwitch  to this buffer as displayed in a different frame.  Emacs
allows you to display the same buffer in multiple windows or
frames.  These different windows can display different
portions of the buffer.  This is equivalent to leaving a
book open at places at once.  This command allows you to
move to the places where you have left the book open.  The
number used to invoke this command specifies which of the
displays you wish to select.  Typically you will have two or
at most three such displays open.  The current display is 0,
the next is 1, and so on.  Optional argument ARG specifies
the display to select.

------------------------------------------------------------

** emacspeak-select-this-buffer-previous-display	Key Sequence: control e <control left> 

Select this buffer as displayed in a `previous' window.
See documentation for command
`emacspeak-select-this-buffer-other-window-display' for the
meaning of `previous'.

------------------------------------------------------------

** emacspeak-show-personality-at-point	Key Sequence: control e meta v 

Show value of property personality (and possibly face)
at point.

------------------------------------------------------------

** emacspeak-show-property-at-point	Key Sequence: control e meta p 

Show value of PROPERTY at point.
If optional arg property is not supplied, read it interactively.
Provides completion based on properties that are of interest.
If no property is set, show a message and exit.

------------------------------------------------------------

** emacspeak-skip-blank-lines-backward	Key Sequence: <shift up> 

Move backward  across blank lines.
The line under point is   then spoken.
Signals beginning  of buffer.

------------------------------------------------------------

** emacspeak-skip-blank-lines-forward	Key Sequence: <shift down> 

Move forward across blank lines.
The line under point is then spoken.
Signals end of buffer.

------------------------------------------------------------

** emacspeak-speak-browse-linux-howto	Key Sequence: control e  cap H  

Browse a Linux Howto file.
We cleanup underlining, and set up outline mode correctly.

------------------------------------------------------------

** emacspeak-speak-hostname	Key Sequence: control e meta h 

Speak host name.

------------------------------------------------------------

** emacspeak-speak-popup-messages	Key Sequence: control h  cap M    <f1>  cap M    <help>  cap M  

Pop up messages buffer.
If it is already selected then hide it and try to restore
previous window configuration.

------------------------------------------------------------

** emacspeak-speak-run-shell-command	Key Sequence: control e ! 

Invoke shell COMMAND and display its output as a table.  The results
are placed in a buffer in Emacspeak's table browsing mode.  Optional
interactive prefix arg as-root runs the command as root (not yet
implemented).  Use this for running shell commands that produce
tabulated output.  This command should be used for shell commands that
produce tabulated output that works with Emacspeak's table recognizer.
Verify this first by running the command in a shell and executing
command `emacspeak-table-display-table-in-region' normally bound to
C-e TAB.

------------------------------------------------------------

** emacspeak-speak-show-active-network-interfaces	Key Sequence: control e  cap I  

Shows all active network interfaces in the echo area.
With interactive prefix argument ADDRESS it prompts for a
specific interface and shows its address. The address is
also copied to the kill ring for convenient yanking.

------------------------------------------------------------

** emacspeak-speak-show-memory-usedConvenience command to view state of memory used in this session so far.

------------------------------------------------------------

** emacspeak-speak-telephone-directoryLookup and display a phone number.
With prefix arg, opens the phone book for editting.

------------------------------------------------------------

** emacspeak-speak-this-buffer-next-display	Key Sequence: control e <right> 

Speak this buffer as displayed in a `previous' window.
See documentation for command
`emacspeak-speak-this-buffer-other-window-display' for the
meaning of `next'.

------------------------------------------------------------

** emacspeak-speak-this-buffer-other-window-display	Key Sequence: control e / 

Speak this buffer as displayed in a different frame.  Emacs
allows you to display the same buffer in multiple windows or
frames.  These different windows can display different
portions of the buffer.  This is equivalent to leaving a
book open at places at once.  This command allows you to
listen to the places where you have left the book open.  The
number used to invoke this command specifies which of the
displays you wish to speak.  Typically you will have two or
at most three such displays open.  The current display is 0,
the next is 1, and so on.  Optional argument ARG specifies
the display to speak.

------------------------------------------------------------

** emacspeak-speak-this-buffer-previous-display	Key Sequence: control e <left> 

Speak this buffer as displayed in a `previous' window.
See documentation for command
`emacspeak-speak-this-buffer-other-window-display' for the
meaning of `previous'.

------------------------------------------------------------

** emacspeak-sudoSUDo command --run command as super user.

------------------------------------------------------------

** emacspeak-switch-to-previous-bufferSwitch to most recently used interesting buffer.

------------------------------------------------------------

** emacspeak-symlink-current-file	Key Sequence: control e meta s 

Link (symbolic link) file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when linking.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Signals an error if target already exists.

------------------------------------------------------------

** emacspeak-view-emacspeak-doc	Key Sequence: control e  cap D  

Display a summary of all Emacspeak commands.

------------------------------------------------------------

** emacspeak-view-emacspeak-faq	Key Sequence: control e  cap F  

Browse the Emacspeak FAQ.

------------------------------------------------------------

** emacspeak-view-emacspeak-news	Key Sequence: control e  cap N  

Display info on recent change to Emacspeak.

------------------------------------------------------------

** emacspeak-view-emacspeak-tips	Key Sequence: control e  cap T  

Browse  Emacspeak productivity tips.

------------------------------------------------------------

** emacspeak-wizards-count-slides-in-regionCount slides starting from point.

------------------------------------------------------------

** emacspeak-wizards-edit-file-as-rootEdit file as root using sudo vi.
See /etc/sudoers for how to set up sudo.

------------------------------------------------------------

** emacspeak-wizards-find-grepRun compile using find and grep. 
Interactive  arguments specify filename pattern and search pattern.

------------------------------------------------------------

** emacspeak-wizards-find-longest-line-in-regionFind longest line in region.
Moves to the longest line when called interactively.

------------------------------------------------------------

** emacspeak-wizards-find-longest-paragraph-in-regionFind longest paragraph in region.
Moves to the longest paragraph when called interactively.

------------------------------------------------------------

** emacspeak-wizards-finder-findRun find-dired on specified switches after prompting for the
directory to where find is to be launched.

------------------------------------------------------------

** emacspeak-wizards-finder-modeEmacspeak Finder



This mode runs the hook `emacspeak-wizards-finder-mode-hook', as the final step
during initialization.

key             binding
---             -------



------------------------------------------------------------

** emacspeak-wizards-fix-read-only-textNuke read-only property on text range.

------------------------------------------------------------

** emacspeak-wizards-fix-typoSearch and replace  recursively in all files with extension `ext'
for `word' and replace it with correction.
Use with caution.

------------------------------------------------------------

** emacspeak-wizards-generate-finderGenerate a widget-enabled finder wizard.

------------------------------------------------------------

** emacspeak-wizards-generate-voice-samplerGenerate a buffer that shows a sample line in all the ACSS settings
for the current voice family.

------------------------------------------------------------

** emacspeak-wizards-get-table-content-from-fileExtract table specified by depth and count from HTML
content at file.
Extracted content is placed as a csv file in task.csv.

------------------------------------------------------------

** emacspeak-wizards-get-table-content-from-urlExtract table specified by depth and count from HTML
content at URL.
Extracted content is placed as a csv file in task.csv.

------------------------------------------------------------

** emacspeak-wizards-google-hitsFilter Google results after performing search to show just the
hits.

------------------------------------------------------------

** emacspeak-wizards-how-many-matchesIf you define a file local variable 
called `emacspeak-occur-pattern' that holds a regular expression 
that matches  lines of interest, you can use this command to conveniently
run `how-many' to count  matching header lines.
With interactive prefix arg, prompts for and remembers the file local pattern.

------------------------------------------------------------

** emacspeak-wizards-move-and-speakSpeaks a chunk of text bounded by point and a target position.
Target position is specified using a navigation command and a
count that specifies how many times to execute that command
first.
Point is left at the target position.
Interactively, command is specified by pressing the key that
;;invokes the command.

------------------------------------------------------------

** emacspeak-wizards-occur-header-linesIf you define a file local variable called
`emacspeak-occur-pattern' that holds a regular expression that
matches header lines, you can use this command to conveniently
run `occur' to find matching header lines. With prefix arg,
prompts for and sets value of the file local pattern.

------------------------------------------------------------

** emacspeak-wizards-portfolio-quotesBring up detailed stock quotes for portfolio specified by 
emacspeak-websearch-personal-portfolio.

------------------------------------------------------------

** emacspeak-wizards-ppp-toggleBring up or bring down ppp.

------------------------------------------------------------

** emacspeak-wizards-ppt-displayCalled to set up preview of an PPT file.
Assumes we are in a buffer visiting a .ppt file.
Previews those contents as HTML and nukes the buffer
visiting the ppt file.

------------------------------------------------------------

** emacspeak-wizards-ppt-modeMajor mode for browsing PPT slides.


PPT files  are converted to HTML and previewed using W3.

In addition to any hooks its parent mode `text-mode' might have run,
this mode runs the hook `emacspeak-wizards-ppt-mode-hook', as the final step
during initialization.

key             binding
---             -------



------------------------------------------------------------

** emacspeak-wizards-rivoRivo wizard.
Prompts for relevant information and schedules a rivo job using
  UNIX AT scheduling facility.
RIVO is implemented by rivo.pl ---
 a Perl script  that can be used to launch realaudio and record
   streaming media for  a specified duration.

------------------------------------------------------------

** emacspeak-wizards-rpm-query-in-diredRun rpm -qi on current dired entry.

------------------------------------------------------------

** emacspeak-wizards-shell-toggle	Key Sequence: control e <f11> 

Switch to the shell buffer and cd to 
 the directory of the current buffer.

------------------------------------------------------------

** emacspeak-wizards-show-environment-variableDisplay value of specified environment variable.

------------------------------------------------------------

** emacspeak-wizards-show-faceShow salient properties of specified face.

------------------------------------------------------------

** emacspeak-wizards-show-list-variableConvenience command to view Emacs variables that are long lists.
Prompts for a variable name and displays its value in a separate buffer.
Lists are displayed one element per line.
Argument VAR specifies variable whose value is to be displayed.

------------------------------------------------------------

** emacspeak-wizards-speak-iso-datetimeMake ISO date-time speech friendly.

------------------------------------------------------------

** emacspeak-wizards-spot-wordsSearches recursively in all files with extension `ext'
for `word' and displays hits in a compilation buffer.

------------------------------------------------------------

** emacspeak-wizards-squeeze-blanksSqueeze multiple blank lines in current buffer.

------------------------------------------------------------

** emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncerToggle pronunciation of mm-dd-yyyy dates.

------------------------------------------------------------

** emacspeak-wizards-tpctl-display-statusShow display status on thinkpads using tpctl.

------------------------------------------------------------

** emacspeak-wizards-tramp-open-locationOpen specified tramp location.
Location is specified by name.

------------------------------------------------------------

** emacspeak-wizards-unitsRun units in a comint sub-process.

------------------------------------------------------------

** emacspeak-wizards-use-w3-or-w3mAlternates between using W3 and W3M for browse-url.

------------------------------------------------------------

** emacspeak-wizards-vc-nAccelerator for VC viewer.

------------------------------------------------------------

** emacspeak-wizards-vc-viewerView contents of specified virtual console.

------------------------------------------------------------

** emacspeak-wizards-vc-viewer-modeMajor mode for interactively viewing virtual console contents.


key             binding
---             -------

C-l		emacspeak-wizards-vc-viewer-refresh



This mode runs the hook `emacspeak-wizards-vc-viewer-mode-hook', as the final step
during initialization.

------------------------------------------------------------

** emacspeak-wizards-vc-viewer-refreshRefresh view of VC we're viewing.

------------------------------------------------------------

** emacspeak-wizards-vi-as-su-fileLaunch sudo vi on specified file in a terminal.

------------------------------------------------------------

** emacspeak-wizards-voice-samplerRead a personality  and apply it to the current line.

------------------------------------------------------------

** emacspeak-wizards-vpn-toggleBring up or bring down vpn.

------------------------------------------------------------

** emacspeak-wizards-xl-displayCalled to set up preview of an XL file.
Assumes we are in a buffer visiting a .xls file.
Previews those contents as HTML and nukes the buffer
visiting the xls file.

------------------------------------------------------------

** emacspeak-wizards-xl-modeMajor mode for browsing XL spreadsheets.


XL Sheets are converted to HTML and previewed using W3.

In addition to any hooks its parent mode `text-mode' might have run,
this mode runs the hook `emacspeak-wizards-xl-mode-hook', as the final step
during initialization.

key             binding
---             -------



------------------------------------------------------------

** emacspeak-xml-shellStart Xml-Shell on contents of system-id.

------------------------------------------------------------

** emacspeak-xml-shell-browse-currentDisplay current node.

------------------------------------------------------------

** emacspeak-xml-shell-browse-resultDisplay XPath  and display its result using W3.

------------------------------------------------------------

** emacspeak-xml-shell-goto-childrenNavigate down to the children of current node.

------------------------------------------------------------

** emacspeak-xml-shell-goto-next-childNavigate forward  to the next child  of current node.

------------------------------------------------------------

** emacspeak-xml-shell-goto-parentNavigate up to the parent of current node.

------------------------------------------------------------

** emacspeak-xml-shell-goto-previous-childNavigate backward  to the previous child  of current node.

------------------------------------------------------------

** emacspeak-xml-shell-modeXML Shell


Interactive XML browser.
key             binding
---             -------

C-c		Prefix Command
<down>		emacspeak-xml-shell-goto-children
<up>		emacspeak-xml-shell-goto-parent
<right>		emacspeak-xml-shell-goto-next-child
<left>		emacspeak-xml-shell-goto-previous-child

C-c v		emacspeak-xml-shell-browse-current
C-c C-v		emacspeak-xml-shell-browse-result



In addition to any hooks its parent mode `comint-mode' might have run,
this mode runs the hook `emacspeak-xml-shell-mode-hook', as the final step
during initialization.

 
Local variables: mode: outline paragraph-separate: "[ ]*$"
end:


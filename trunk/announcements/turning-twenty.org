* Emacspeak At Twenty: Looking Back, Looking Forward

** Introduction

One afternoon in  the third week of September 1994, 
I started writing myself a small Emacs extension using Lisp
Advice to make Emacs speak to me so I could use a Linux laptop. 
As Emacspeak turns twenty, this article is both a quick look back
over the twenty years of lessons learned, as well as a  glimpse
into what might be possible as we evolve to a  world of
connected, ubiquitous computing.

** The Beginning: Using UNIX With Speech Output In 1994

As a graduate student at [[http://www.cs.cornell.edu/info/people/raman/raman.html][Cornell]],  I accessed my Unix workstation
(SunOS) from a 486 PC running IBM Screenreader.  There was no
means of directly using a UNIX box at the time; after graduating,
I continued doing the same for about six months at Digital
Research in Cambridge --- the only difference being that my
desktop workstation was now a DEC-Alpha. Throughout this time,
Emacs was my environment of choice for everything from software
development and Internet access to writing documents.


In fall of 1994, I wanted to start using a laptop running Linux;
a colleague (Dave Wecker) was retiring his 386mhz laptop that
already had Linux on it and I decided to inherit it. But there
was only one problem --- until then I had always accessed a UNIX
machine from a secondary PC running a screenreader --- something
that would clearly make no sense with a laptop!

A few weeks earlier, another colleague Win Treese, had pointed
out the interesting possibilities presented by package [[Advice][Advice]]
 in Emacs 19.23 --- he had sent around a
small snippet of code that magically modified Emacs'
version-control primitive to first create an /RCS/ directory if
none existed before adding a file to version control. When I
speculated about using the Linux laptop, Dave remarked --- you
live in Emacs anyway --- why dont you just make it talk!

Connecting the dots, I decided to write myself a tool that
augmented Emacs' default behaviour to /speak/ --- within about 4
hours, version 0.01 of Emacspeak was up and running.


** Key Enabler: Emacs And Lisp Advice

It took me a couple of weeks to fully recognize the potential of
what I had built with Emacs Lisp Advice. Until then, I had used
screen-readers to listen to the contents of the visual display
--- but Lisp Advice let me do a lot more --- it enabled Emacspeak
to generate highly context-specific spoken feedback, augmented by
a set of auditory icons. I later formalized this design under the
name [[Speech-Enabled Applications]]. For a detailed overview of the
architecture of Emacspeak, see the [[http://emacspeak.sourceforge.net/raman/publications/bc-emacspeak/publish-emacspeak-bc.html][chapter on Emacspeak]] in the
book [[http://emacspeak.blogspot.com/2007/07/emacspeak-and-beautiful-code.html][Beautiful Code]] from O'Reilly.

** Key Component: Text To Speech (TTS)

Emacspeak is a speech-subsystem for Emacs; it depends on an
external Text-To-Speech (TTS) engine to produce speech. In 1994,
Digital Equipment released what would turn out to be the last in
the line of hardware DECTalk synthesizers, the DECTalk
Express. This was essentially an Intel 386with 1mb of flash
memory that ran a version of the DECTalk TTS software --- to
date, it still remains my favorite Text-To-Speech engine.
At the time,  I also had a software version of the same engine
running on my DEC-Alpha workstation;  the desire to use either a
software or hardware solution to produce speech output defined
the Emacspeak speech-server architecture.

I went to IBM Research in 1999; this coincided with IBM releasing
a version of the Eloquennce TTS engine on Linux under the name
/ViaVoice Outloud/. My colleague Jeffrey Sorenson implemented an
early version of the Emacspeak speech-server for this engine using
the OSS API; I later updated it to use the ALSA library while on
a flight back to SFO from Boston in 2001. That is still the TTS
engine that is speaking as I type this article on my laptop. 

20 years on, TTS continues to be the weakest link on Linux; the
best available solution in terms of quality continues to be the
Linux port of Eloquence TTS available from Voxin in Europe for a
small price. Looking back across 20 years, the state of TTS on
Linux in particular and across all platforms in general continues
to be a disappointment; most of today's newer TTS engines are
geared toward mainstream use-cases where /naturalness/ of the
voice tends to supercede intelligebility at higher
speech-rates. Ironically, modern TTS engines also give
applications far less control over the generated output --- as a
case in point, I implemented [[http://www.cs.cornell.edu/home/raman/aster/demo.html][Audio System For Technical Readings
(AsTeR)]] in 1994 using the DECTalk; 20 years later, we implemented
[[http://allthingsd.com/20130604/t-v-ramans-audio-deja-vu-from-google-a-math-reading-system-for-the-web/][MathML support]] in [[http://www.chromevox.com/][ChromeVox]]  using Google TTS. In 2013, it turned
out to be difficult or impossible to implement the type of audio
renderings that were possible with the admittedly less-natural
sounding DECTalk!

** Emacspeak And Authoring Documents 

** Emacspeak And Software Development 

** Emacspeak And The Early Days Of The Web

** Audio Formatting: Generalizing Aural CSS 

** Conversational Gestures For The Audio Desktop 


** The RESTful Web:  Web Wizards And URL Templates For Faster Access

** Accessing Media Streams 

** Leveraging Computational Tools: From R To IPython Notebooks 



** Integrating With Window Managers: SawFish And StumpWM


** Bookshare And Epub: Ubiquitous Access To Books 




** Mashing It Up: Leveraging Evolving Web APIs

** EMail, GMail And Instant Messaging Using Open Protocols 



** References 

  - [[http://emacspeak.sourceforge.net/raman/aui/aui.html][Auditory User Interfaces]]::  Klewer Publishing, 1997.
  - Advice  ::   An Emacs Lisp package by    [[http://www.isi.edu/~hans/][Hans Chalupsky]] that
                 became part of Emacs 19.23.
  - [[http://emacspeak.blogspot.com/2007/07/emacspeak-and-beautiful-code.html][Beautiful Code]] :: An overview of the Emacspeak architecture.
  - <<[[http://emacspeak.sourceforge.net/raman/publications/chi96-emacspeak/][Speech-Enabled Applications>>]] :: Emacspeak at CHI 1996.


   
** Conclusion 

#+TITLE: Emacspeak At Twenty: Looking Back, Looking Forward
#+DATE: <2014-08-19 Tue>
#+AUTHOR: raman
#+EMAIL: raman@google.com
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK")
#+OPTIONS: date:t e:t email:nil f:t inline:t num:t p:nil pri:nil
#+OPTIONS: stat:t tags:t tasks:t tex:t timestamp:t toc:t todo:t
#+OPTIONS: |:t
#+CREATOR: Emacs 24.4.50.1 (Org mode 8.2.6)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export

#+OPTIONS: html-link-use-abs-url:nil html-postamble:auto
#+OPTIONS: html-preamble:t html-scripts:t html-style:t
#+OPTIONS: html5-fancy:nil tex:t
#+CREATOR: <a href="http://www.gnu.org/software/emacs/">Emacs</a> 24.4.50.1 (<a href="http://orgmode.org">Org</a> mode 8.2.6)
#+HTML_CONTAINER: div
#+HTML_DOCTYPE: xhtml-strict
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+HTML_LINK_HOME:
#+HTML_LINK_UP:
#+HTML_MATHJAX:
#+INFOJS_OPT:
#+LATEX_HEADER:
